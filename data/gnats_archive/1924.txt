Received: (qmail 9149 invoked by uid 2012); 9 Mar 1998 00:06:26 -0000
Message-Id: <19980309000626.9148.qmail@hyperreal.org>
Date: 9 Mar 1998 00:06:26 -0000
From: Dag Wieers <dag@digibel.be>
Reply-To: dag@digibel.be
To: apbugs@hyperreal.org
Subject: VirtualHosts don't work with suexec, why not simply...
X-Send-Pr-Version: 3.2

>Number:         1924
>Category:       suexec
>Synopsis:       VirtualHosts don't work with suexec, why not simply...
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          change-request
>Submitter-Id:   apache
>Arrival-Date:   Sun Mar  8 16:10:00 PST 1998
>Last-Modified:  Sun Mar  8 17:30:00 PST 1998
>Originator:     dag@digibel.be
>Organization:
>Release:        1.3b5
>Environment:
N/A
>Description:
suexec won't work with VirtualHost's located not in the documentroot,
as already pointed out, you can work around it with changing the path
to a location in the document root.
but wouldn't it be wiser to simply instead of defining one document root,
just taking the environment-variable DOCUMENT_ROOT instead of the #define DOC_ROOT.
are there any risks ? doesn't apache set these environments safely for every 
VirtualHost ? Please send comments to me !!!
>How-To-Repeat:
simply add a VirtualHost with a DocumentRoot set to his home-directory 
(e.g. /home/user) suexec won't find the cmd as it is not located in the
main document-root (e.g. /usr/local/apache/htdocs)
>Fix:
instead of using DOC_ROOT from suexec.h, comment the #defines and replace
the DOC_ROOT by getenv("DOCUMENT_ROOT") twice in suexec.c !
Are there any risks involved %3
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: marc
State-Changed-When: Sun Mar  8 16:15:23 PST 1998
State-Changed-Why:
No, we can not do that.  It is not secure.  suexec has to
be secure even in the case that any user can execute it.
It is possible to extend it to allow multiple hardcoded
documentroots.  Right now, VirtualHosts work fine if you
put them all below a common directory.

suexec is very limited and anal on purpose; it is very easy
to open up a lot of security risks.

From: Marc Slemko <marcs@znep.com>
To: Dag Wieers <dag@digibel.be>
Cc: Apache bugs database <apbugs@apache.org>
Subject: Re: suexec/1924: VirtualHosts don't work with suexec, why not simply...
Date: Sun, 8 Mar 1998 18:11:48 -0700 (MST)

 On Mon, 9 Mar 1998, Dag Wieers wrote:
 
 > > Synopsis: VirtualHosts don't work with suexec, why not simply...
 > > 
 > > State-Changed-From-To: open-closed
 > > State-Changed-By: marc
 > > State-Changed-When: Sun Mar  8 16:15:23 PST 1998
 > > State-Changed-Why:
 > > No, we can not do that.  It is not secure.  suexec has to
 > > be secure even in the case that any user can execute it.
 > > It is possible to extend it to allow multiple hardcoded
 > > documentroots.  Right now, VirtualHosts work fine if you
 > > put them all below a common directory.
 > > 
 > > suexec is very limited and anal on purpose; it is very easy
 > > to open up a lot of security risks.
 > thanks for the instant reply, but i don't see why it is not secure, you
 > can't possibly alter the environment-variable in the short time apache
 > loads suexec, can you ? otherwise i think that's a security-bug in apache
 > not suexec. multiple hardcoded documentroots needs recompiles after every
 > addition... using the environmentvariables (that were made for these
 > tasks) would make this much more flexible, i think. (or communication as
 > an argument is another option, although the environment is already there,
 > why don't suexec use it ? ;ppp)
 
 No, the whole point is that _ANYONE_ else can execute suexec if they can
 get access to the user Apache runs as to bypass that check.  It is not
 acceptable for that person to be able to specify their own varilables that
 can alter what suexec does in such a manner.  If suexec would listen to
 what they specify, it would be possible to compromise security in many
 cases.
 
 > 
 > if i'm taking away your precious time, just tell me. but i think this is
 > important enough to clear this out, cause i'm convinced that cgi's ran by
 > users are a counterspell against ASP... (and ASP is far more worse than
 > CGI IMHO)
 >                    _  _  _
 > ----------------- |_)(-)(_- -----------------
 >  fn:dag wieers - http://www.sisa.be/dagmenu/
 >  em:dag@digibel.be                uin:363535      
 > ---------------------------------------------
 >  if the human  brain were  so simple that we 
 >  could understand it,  we would be so simple
 >  we couldn't.
 > ---------------------------------------------
 > 
 

From: Dag Wieers <dag@digibel.be>
To: Marc Slemko <marcs@znep.com>
Cc: Apache bugs database <apbugs@apache.org>
Subject: Re: suexec/1924: VirtualHosts don't work with suexec, why not simply...
Date: Mon, 9 Mar 1998 01:26:19 +0100 (CET)

 > No, the whole point is that _ANYONE_ else can execute suexec if they can
 > get access to the user Apache runs as to bypass that check.  It is not
 > acceptable for that person to be able to specify their own varilables that
 > can alter what suexec does in such a manner.  If suexec would listen to
 > what they specify, it would be possible to compromise security in many
 > cases.
 oki, you're right, suexec can be run from the prompt too, i didn't think
 of that. i'm sorry, so the only solution to work around the virtual hosts
 without recompiling once in a while is to hardcode it into apache ?
 thanks for explaining this, maybe it worthwhile to tell this in the
 suexec-documentation or in a faq, as it would have saved me (and you) some
 time...
 
 thanks,
                    _  _  _
 ----------------- |_)(-)(_- -----------------
  fn:dag wieers - http://www.sisa.be/dagmenu/
  em:dag@digibel.be                uin:363535      
 ---------------------------------------------
  if the human  brain were  so simple that we 
  could understand it,  we would be so simple
  we couldn't.
 ---------------------------------------------
 
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]



