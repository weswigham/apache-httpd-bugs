Received: (qmail 53903 invoked by uid 501); 25 Feb 2001 13:50:13 -0000
Message-Id: <20010225135013.53902.qmail@apache.org>
Date: 25 Feb 2001 13:50:13 -0000
From: Matthew Sheahan <chaos@evolution.com>
Reply-To: chaos@evolution.com
To: submit@bugz.apache.org
Subject: Suggested functionality expansion for apachectl script
X-Send-Pr-Version: 3.110

>Number:         7315
>Category:       general
>Synopsis:       Suggested functionality expansion for apachectl script
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          open
>Quarter:
>Keywords:
>Date-Required:
>Class:          change-request
>Submitter-Id:   apache
>Arrival-Date:   Sun Feb 25 06:00:01 PST 2001
>Closed-Date:
>Last-Modified:
>Originator:     chaos@evolution.com
>Release:        1.3.17
>Organization:
apache
>Environment:
This is a suggested revision to a portable shell script, but just in case:
SunOS new-deal 5.7 Generic_106541-08 sun4u sparc SUNW,Ultra-80
gcc version 2.95 19990728 (release)
>Description:
At my workplace we've found it very useful to have available extended
functionality in apachectl for doing a full, checked stop-start cycle.
This is mostly because mod_perl servers don't deal well with HUP/restart
and USR1/graceful restarts, at least in any of the environments where we
use them.  At my supervisor's request I have cleaned up the code we use
for this and am submitting the resulting slightly expanded and reorganized
apachectl script in case you folks would like to incorporate this
capability.  As you can see, I've broken out much of what apachectl does
into functions to make the whole process easier, which should improve
apachectl's maintainability in general.

Enclosed is our local version of apachectl (PIDFILE and HTTPD set as in
our install).

#!/bin/sh
#
# Apache control script designed to allow an easy command line interface
# to controlling Apache.  Written by Marc Slemko, 1997/08/23
#
# fullstop and fullrestart operations, separation of operations into shell
# functions, by Matthew Sheahan, 2001/02/23
# 
# The exit codes returned are:
#       0 - operation completed successfully
#       1 - 
#       2 - usage error
#       3 - httpd could not be started
#       4 - httpd could not be stopped
#       5 - httpd could not be started during a restart
#       6 - httpd could not be restarted during a restart
#       7 - httpd could not be restarted during a graceful restart
#       8 - configuration syntax error
#
# When multiple arguments are given, only the error from the _last_
# one is reported.  Run "apachectl help" for usage info
#
#
# |||||||||||||||||||| START CONFIGURATION SECTION  ||||||||||||||||||||
# --------------------                              --------------------
# 
# the path to your PID file
PIDFILE=/opt/apache/perl/logs/httpd.pid
#
# the path to your httpd binary, including options if necessary
HTTPD=/opt/apache/perl/bin/httpd
#
# a command that outputs a formatted text version of the HTML at the
# url given on the command line.  Designed for lynx, however other
# programs may work.  
LYNX="lynx -dump"
#
# the URL to your server's mod_status status page.  If you do not
# have one, then status and fullstatus will not work.
STATUSURL="http://localhost/server-status"
#
# --------------------                              --------------------
# ||||||||||||||||||||   END CONFIGURATION SECTION  ||||||||||||||||||||

ERROR=0
ARGV="$@"
if [ "x$ARGV" = "x" ] ; then 
    ARGS="help"
fi

# check_for_pidfile
#     looks for apache PID file and fills in STATUS and RUNNING variables
#     takes no arguments

check_for_pidfile() {
    if [ -f $PIDFILE ] ; then
        PID=`cat $PIDFILE`
        if [ "x$PID" != "x" ] && kill -0 $PID 2>/dev/null ; then
            STATUS="httpd (pid $PID) running"
            RUNNING=1
        else
            STATUS="httpd (pid $PID?) not running"
            RUNNING=0
        fi
    else
        STATUS="httpd (no pid file) not running"
        RUNNING=0
    fi
}

# do_start
#     starts apache
#     first argument is the error to set in the event of failure
#     subsequent, optional arguments are defines to be passed to apache via -D
#
#     example: do_start 3 SSL
#     starts apache with -D SSL

do_start() {
    USE_ERROR=$1
    shift
    START_CMD="$HTTPD"
    while [ "x$1" != "x" ]; do
        START_CMD="$START_CMD -D $1"
        shift
    done
    if [ $RUNNING -eq 1 ]; then
        echo "$0 $ARG: httpd (pid $PID) already running"
        continue
    fi
    if sh -c "$START_CMD" ; then
        echo "$0 $ARG: httpd started"
    else
        echo "$0 $ARG: httpd could not be started"
        ERROR=$USE_ERROR
    fi
}

# do_stop
#     sends stop signal to apache
#     first argument is the error to set in the event of failure

do_stop() {
    USE_ERROR=$1
    shift
    if [ $RUNNING -eq 0 ]; then
        echo "$0 $ARG: $STATUS"
        continue
    fi
    if kill $PID ; then
        echo "$0 $ARG: httpd signaled to stop"
    else
        echo "$0 $ARG: httpd could not be signaled to stop"
        ERROR=$USE_ERROR
    fi
}

# do_configtest
#    runs an apache configuration test and fills in the CONFIG_OK variable
#    first argument is the error to set in the event of failure
#    second, optional argument is 'silent' to suppress test output

do_configtest() {
    USE_ERROR=$1
    shift
    if [ "x$1" = "xsilent" ]; then
        CONFIGTEST_CMD="$HTTPD -t >/dev/null 2>&1"
    else
        CONFIGTEST_CMD="$HTTPD -t"
    fi
    if sh -c "$CONFIGTEST_CMD"; then
        CONFIG_OK=1
        :
    else
        CONFIG_OK=0
        ERROR=$USE_ERROR
    fi
}

for ARG in $@ $ARGS
do
    check_for_pidfile
    case $ARG in
    start)
        do_start 3
        ;;
    stop)
        do_stop 4
        ;;
    restart)
        if [ $RUNNING -eq 0 ]; then
            echo "$0 $ARG: httpd not running, trying to start"
            do_start 5
        else
            echo "$0 $ARG: testing configuration"
            do_configtest 6 silent
            if [ $CONFIG_OK -eq 1 ]; then
                if kill -HUP $PID ; then
                    echo "$0 $ARG: httpd restarted"
                else
                    echo "$0 $ARG: httpd could not be restarted"
                    ERROR=6
                fi
            else
                echo "$0 $ARG: configuration broken, ignoring restart"
                echo "$0 $ARG: (run 'apachectl configtest' for details)"
            fi
        fi
        ;;
    graceful)
        if [ $RUNNING -eq 0 ]; then
            echo "$0 $ARG: httpd not running, trying to start"
            do_start 5
        else
            echo "$0 $ARG: testing configuration"
            do_configtest 7 silent
            if [ $CONFIG_OK -eq 1 ]; then
                if kill -USR1 $PID ; then
                    echo "$0 $ARG: httpd gracefully restarted"
                else
                    echo "$0 $ARG: httpd could not be restarted"
                    ERROR=7
                fi
            else
                echo "$0 $ARG: configuration broken, ignoring restart"
                echo "$0 $ARG: (run 'apachectl configtest' for details)"
            fi
        fi
        ;;
    status)
        $LYNX $STATUSURL | awk ' /process$/ { print; exit } { print } '
        ;;
    fullstatus)
        $LYNX $STATUSURL
        ;;
    configtest)
        do_configtest 8
        ;;
    fullstop)
        do_stop 4
        check_for_pidfile
        while [ $RUNNING -eq 1 -a $ERROR -eq 0 ]; do
            sleep 1
            check_for_pidfile
            if [ $RUNNING -eq 1 ]; then
                do_stop 4
            fi
        done
        ;;
    fullrestart)
        if [ $RUNNING -eq 0 ]; then
            echo "$0 $ARG: httpd not running, trying to start"
            do_start 5
        else
            echo "$0 $ARG: testing configuration"
            do_configtest 6 silent
            if [ $CONFIG_OK -eq 1 ]; then
                do_stop 4
                check_for_pidfile
                while [ $RUNNING -eq 1 -a $ERROR -eq 0 ]; do
                    sleep 1
                    check_for_pidfile
                    if [ $RUNNING -eq 1 ]; then
                        do_stop 4
                    fi
                done
                if [ $ERROR -eq 0 ]; then
                    do_start 5
                fi
            else
                echo "$0 $ARG: configuration broken, ignoring restart"
                echo "$0 $ARG: (run 'apachectl configtest' for details)"
            fi
        fi
        ;;
    *)
        echo "usage: $0 (start|stop|restart|fullstatus|status|graceful|fullstop|fullrestart|configtest|help)"
        cat <<EOF

start       - start httpd
stop        - stop httpd
restart     - restart httpd if running by sending a SIGHUP or start if 
              not running
fullstatus  - dump a full status screen; requires lynx and mod_status enabled
status      - dump a short status screen; requires lynx and mod_status enabled
graceful    - do a graceful restart by sending a SIGUSR1, or start if
              not running
fullstop    - send stop signals until httpd stops
fullrestart - do a complete stop-start cycle by sending stop signals until
              httpd stops, then starting
configtest  - do a configuration syntax test
help        - this screen

EOF
        ERROR=2
    ;;

    esac

done

exit $ERROR

# ====================================================================
# Copyright (c) 1995-1999 The Apache Group.  All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer. 
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 
# 3. All advertising materials mentioning features or use of this
#    software must display the following acknowledgment:
#    "This product includes software developed by the Apache Group
#    for use in the Apache HTTP server project (http://www.apache.org/)."
# 
# 4. The names "Apache Server" and "Apache Group" must not be used to
#    endorse or promote products derived from this software without
#    prior written permission. For written permission, please contact
#    apache@apache.org.
# 
# 5. Products derived from this software may not be called "Apache"
#    nor may "Apache" appear in their names without prior written
#    permission of the Apache Group.
#
# 6. Redistributions of any form whatsoever must retain the following
#    acknowledgment:
#    "This product includes software developed by the Apache Group
#    for use in the Apache HTTP server project (http://www.apache.org/)."
# 
# THIS SOFTWARE IS PROVIDED BY THE APACHE GROUP ``AS IS'' AND ANY
# EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE APACHE GROUP OR
# ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
# ====================================================================
# 
# This software consists of voluntary contributions made by many
# individuals on behalf of the Apache Group and was originally based
# on public domain software written at the National Center for
# Supercomputing Applications, University of Illinois, Urbana-Champaign.
# For more information on the Apache Group and the Apache HTTP server
# project, please see <http://www.apache.org/>.
# 
>How-To-Repeat:

>Fix:

>Release-Note:
>Audit-Trail:
>Unformatted:
 [In order for any reply to be added to the PR database, you need]
 [to include <apbugs@Apache.Org> in the Cc line and make sure the]
 [subject line starts with the report component and number, with ]
 [or without any 'Re:' prefixes (such as "general/1098:" or      ]
 ["Re: general/1098:").  If the subject doesn't match this       ]
 [pattern, your message will be misfiled and ignored.  The       ]
 ["apbugs" address is not added to the Cc line of messages from  ]
 [the database automatically because of the potential for mail   ]
 [loops.  If you do not include this Cc, your reply may be ig-   ]
 [nored unless you are responding to an explicit request from a  ]
 [developer.  Reply only with text; DO NOT SEND ATTACHMENTS!     ]
 
 

