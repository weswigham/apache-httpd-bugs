Received: (qmail 15720 invoked by uid 2012); 20 Sep 1998 19:13:15 -0000
Message-Id: <19980920191315.15719.qmail@hyperreal.org>
Date: 20 Sep 1998 19:13:15 -0000
From: Randy Weinstein <rw263@is7.NYU.EDU>
Reply-To: rw263@is7.NYU.EDU
To: apbugs@hyperreal.org
Subject: module execution order
X-Send-Pr-Version: 3.2

>Number:         3033
>Category:       config
>Synopsis:       module execution order
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          change-request
>Submitter-Id:   apache
>Arrival-Date:   Sun Sep 20 12:20:00 PDT 1998
>Last-Modified:  Wed Sep 23 09:10:00 PDT 1998
>Originator:     rw263@is7.NYU.EDU
>Organization:
>Release:        1. x
>Environment:
n/a
>Description:
according to the default apache src/Configuration, the authentication module is
executed BEFORE the rewrite module. This doesn't make any sense since if the
RewriteRule is successful, then the file being retrieved may not be in the
authentication realm. Why would one need to authenticate just to immediately be 
moved out of the authentication realm? Making the Rewrite module execute BEFORE
the authentication module would skip the need for this nonsense authentication.
>How-To-Repeat:
n/a
>Fix:
Change the order of the default order in Configuration
>Audit-Trail:

From: Randy Jae Weinstein <rw263@is7.nyu.edu>
To: apbugs@hyperreal.org, apache-bugdb@apache.org
Cc:  Subject: Re: config/3033: module execution order
Date: Tue, 22 Sep 1998 10:43:25 -0400 (EDT)

 Fix:
  Better yet, have execution of lines in the htaccess file as they appear,
  so execute as written instead of executing modules sequentially.
 
 -Cheers,
  RJW
 
State-Changed-From-To: open-closed
State-Changed-By: marc
State-Changed-When: Tue Sep 22 22:48:49 PDT 1998
State-Changed-Why:
Authentication has to come first to avoid revealing private
information.  If someone restricts access to an area, they
have restricted access to the area.  You have to access that
area to get "information" (in this case, a redirect), so
you require auth.

Say you were redirecting people to a ftp site with a login
and password and you wanted to require authentication
before you redirected them with that password.

Sure, there are examples where it would be useful to do it
the other way around but the basic concept that information
should not be revealed from a trusted area to a user that
shouldn't have access to that area.  Documents are not
the only form of information by any means.

As for executing things "in the order they appear in htaccess
files", this makes no sense and is completely unsupportable.
It may sound nice, but if you actually think about how it would
work it would be very ugly.
Release-Changed-From-To: 1.x-1. x
Release-Changed-By: marc
Release-Changed-When: Tue Sep 22 22:48:49 PDT 1998

From: Marc Slemko <marcs@znep.com>
To: Randy Jae Weinstein <rw263@is7.nyu.edu>
Cc: apbugs@apache.org
Subject: Re: config/3033: module execution order
Date: Wed, 23 Sep 1998 09:05:58 -0700 (PDT)

 On Wed, 23 Sep 1998, Randy Jae Weinstein wrote:
 
 > > information.  If someone restricts access to an area, they
 > > have restricted access to the area.  You have to access that
 > > area to get "information" (in this case, a redirect), so
 > > you require auth.
 > > 
 > However, if redirect is carried out first, then the user may not even be
 > in the authentication realm! Even if redirect is executed first, the
 > authentication information would _still_ be carried out and one would not
 > sacrifice any restricted information.
 
 Erm... no.  You are missing the point.  The redirect itself could be the
 restricted information.
 
 > 
 > > As for executing things "in the order they appear in htaccess
 > > files", this makes no sense and is completely unsupportable.
 > > It may sound nice, but if you actually think about how it would
 > > work it would be very ugly.
 > >
 > this would be the best of both worlds, solving both problems. True it
 > might get ugly under the current way apache is done, but maybe for 2.0 it
 > wouldn't be. Atleast suspend the report so the idea isn't lost?
 
 No, it just doesn't make sense period.  You can't just execute modules in
 some arbitrary order that you try to make up bsaed on the order in the
 htaccess file.  That would be a horrible nightmare to maintain or debug.
 
 It really doesn't do anything to have a bunch of suspended PRs around that
 aren't going to get addressed because they don't make sense...
 
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]
[If you do not include this Cc, your reply may be ig-   ]
[nored unless you are responding to an explicit request ]
[from a developer.                                      ]
[Reply only with text; DO NOT SEND ATTACHMENTS!         ]



