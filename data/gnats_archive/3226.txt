Received: (qmail 15320 invoked by uid 2012); 16 Oct 1998 07:48:41 -0000
Message-Id: <19981016074841.15319.qmail@hyperreal.org>
Date: 16 Oct 1998 07:48:41 -0000
From: Sebastian Andersson <sa@hogia.net>
Reply-To: sa@hogia.net
To: apbugs@hyperreal.org
Subject: Memory leak or usage of freed memory.
X-Send-Pr-Version: 3.2

>Number:         3226
>Category:       mod_auth-any
>Synopsis:       Memory leak or usage of freed memory.
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Fri Oct 16 00:50:00 PDT 1998
>Last-Modified:  Mon Oct 19 00:20:01 PDT 1998
>Originator:     sa@hogia.net
>Organization:
>Release:        1.3.3
>Environment:
All.
>Description:
I don't have a full understanding of the Apache API yet so I don't know if
this is a free memory read or a memory leak problem:
In src/main/http_config.c:ap_set_file_slot (which is called from mod_auth*) the
arg parameter is in one case just copied to a structure and in another case a
new string is allocated and copied to the structure without freeing the arg
string. I believe the correct code should be (the changed line marked with a +):

API_EXPORT_NONSTD(const char *) ap_set_file_slot(cmd_parms *cmd, char *struct_ptr, char *arg)
{
    /* Prepend server_root to relative arg.
       This allows .htaccess to be independent of server_root,
       so the server can be moved or mirrored with less pain.  */
    char *p;
    int offset = (int) (long) cmd->info;
    if (ap_os_is_path_absolute(arg))
+       p = ap_pstrdup(cmd->pool, arg);
    else
        p = ap_make_full_path(cmd->pool, ap_server_root, arg);
    *(char **) (struct_ptr + offset) = p;
    return NULL;
}
>How-To-Repeat:

>Fix:
Yes.
>Audit-Trail:

From: Marc Slemko <marcs@znep.com>
To: Sebastian Andersson <sa@hogia.net>
Cc: apbugs@hyperreal.org
Subject: Re: mod_auth-any/3226: Memory leak or usage of freed memory.
Date: Fri, 16 Oct 1998 10:50:12 -0700 (PDT)

 On 16 Oct 1998, Sebastian Andersson wrote:
 
 > >Description:
 > I don't have a full understanding of the Apache API yet so I don't know if
 > this is a free memory read or a memory leak problem:
 > In src/main/http_config.c:ap_set_file_slot (which is called from mod_auth*) the
 > arg parameter is in one case just copied to a structure and in another case a
 > new string is allocated and copied to the structure without freeing the arg
 > string. I believe the correct code should be (the changed line marked with a +):
 
 Can you clarify what you mean by "in one case"?
 
 > 
 > API_EXPORT_NONSTD(const char *) ap_set_file_slot(cmd_parms *cmd, char *struct_ptr, char *arg)
 > {
 >     /* Prepend server_root to relative arg.
 >        This allows .htaccess to be independent of server_root,
 >        so the server can be moved or mirrored with less pain.  */
 >     char *p;
 >     int offset = (int) (long) cmd->info;
 >     if (ap_os_is_path_absolute(arg))
 > +       p = ap_pstrdup(cmd->pool, arg);
 
 The string will already be allocated from the cmd->pool, so simply duping
 it with that pool won't change anything if there was a use of freed
 memory.
 
 It shouldn't be a leak since it is still allocated from the proper pool in
 the proper scope.
 
State-Changed-From-To: open-closed
State-Changed-By: marc
State-Changed-When: Mon Oct 19 00:14:06 PDT 1998
State-Changed-Why:
User error.

From: Marc Slemko <marcs@znep.com>
To: Apache bugs database <apbugs@apache.org>
Cc:  Subject: Re: mod_auth-any/3226: Memory leak or usage of freed memory. (fwd)
Date: Mon, 19 Oct 1998 00:14:24 -0700 (PDT)

 ---------- Forwarded message ----------
 Date: Mon, 19 Oct 1998 09:09:28 +0200 (MET DST)
 From: Sebastian Andersson <sa@hogia.net>
 To: Marc Slemko <marcs@znep.com>
 Subject: Re: mod_auth-any/3226: Memory leak or usage of freed memory.
 
 On Fri, 16 Oct 1998, Marc Slemko wrote:
 
 > The string will already be allocated from the cmd->pool, so simply duping
 > it with that pool won't change anything if there was a use of freed
 > memory.
 
 Ok. I missunderstood the api then. I thought the pools were just used to
 cluster malloc/frees together to improve the allocation performance and
 memory fragmentation, not to perform a simple "garbage collection".
 
 > It shouldn't be a leak since it is still allocated from the proper pool in
 > the proper scope.
 
 Yes. I see that now. I'm sorry to have bothered you with this.
 
 Regards,
 /Sebastian
 
 See http://www.hogia.net/keys/sa-pgp.asc for public pgp key.
 
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]
[If you do not include this Cc, your reply may be ig-   ]
[nored unless you are responding to an explicit request ]
[from a developer.                                      ]
[Reply only with text; DO NOT SEND ATTACHMENTS!         ]



