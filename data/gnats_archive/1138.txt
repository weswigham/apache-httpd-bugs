From apwww@hyperreal.org  Mon Sep 15 15:25:07 1997
Received: (from apwww@localhost)
	by hyperreal.org (8.8.5/8.8.5) id PAA29622;
	Mon, 15 Sep 1997 15:25:07 -0700 (PDT)
Message-Id: <199709152225.PAA29622@hyperreal.org>
Date: Mon, 15 Sep 1997 15:25:07 -0700 (PDT)
From: Keith Stevenson <ktstev01@homer.louisville.edu>
Reply-To: ktstev01@homer.louisville.edu
To: apbugs@hyperreal.org
Subject: suExec uses too much privilege to do its logging
X-Send-Pr-Version: 3.2

>Number:         1138
>Category:       suexec
>Synopsis:       suExec uses too much privilege to do its logging
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          change-request
>Submitter-Id:   apache
>Arrival-Date:   Mon Sep 15 15:30:03 1997
>Last-Modified:  Mon Sep 15 15:38:09 PDT 1997
>Originator:     ktstev01@homer.louisville.edu
>Organization:
>Release:        1.2.0
>Environment:
HP-UX 10.10
Apache compiled with suExec by HP cc compiler
>Description:
suExec logs with root privilege.  This could allow a misconfigured binary to
do some serious damage to the operating system.
>How-To-Repeat:
According to Jason Dour this behavior is by design.
>Fix:
I suggest that suExec fork a sub-process to do the actual logging.
The sub-process should change its uid to be that of the uid running the httpd
before creating/appending to the suExec log file.
I realize that this is more work on the programming side, but it would make
the suExec module safer to run
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: marc
State-Changed-When: Mon Sep 15 15:37:57 PDT 1997
State-Changed-Why:
I'm afraid I don't see the concern.  If you do something
to the suexec source to make it insecure, like pointing
your log file at /etc/passwd, then that is completely
your problem.  We can try to prevent user errors, but that
is going a bit far.

Logging as the user httpd runs as is _not_ acceptable
because then the log file will not be secure if anyone
can compromise that UID.  Apache opens its logs as the
user it is started as (ie. normally root) by design,
and so does suexec.  I can't see the security risk.
>Unformatted:


