Received: (qmail 23923 invoked by uid 2012); 17 May 1999 01:29:12 -0000
Message-Id: <19990517012912.23922.qmail@hyperreal.org>
Date: 17 May 1999 01:29:12 -0000
From: Bill Ott <billott@ibm.net>
Reply-To: billott@ibm.net
To: apbugs@hyperreal.org
Subject: parsing apears to stop at the CGI file.
X-Send-Pr-Version: 3.2

>Number:         4422
>Category:       mod_auth-any
>Synopsis:       parsing apears to stop at the CGI file.
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          support
>Submitter-Id:   apache
>Arrival-Date:   Sun May 16 18:30:01 PDT 1999
>Last-Modified:  Wed May 26 08:03:09 PDT 1999
>Originator:     billott@ibm.net
>Organization:
>Release:        1.3.6
>Environment:
NT 4.0 w/ SP4, running DB2 and Net.Data, converting from Domino Web Server to Apache.
>Description:
Net.data runs as a cgi-bin. (http://foo.com/db2www.cgi/trythid.d3w) where
trythis.d3w is passed to db2www.cgi. I sucessfully restrict access to the
cgi-bin directory & the program works just like Domino. Under Domino, I futher
restrict file access for files ending in .d2w. Under apache, it appears that 
the file checking stops when it reaches the cgi and it transfers to there.
The result is I lose the second level file protection. This may be the "parsed
output" limitation and it works as designed. If so, I'll live without it.  
>How-To-Repeat:
Set up a cgi-bin where you pass the cgi a file. Then try to restrict access to
the file.
>Fix:

>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: coar
State-Changed-When: Wed May 26 08:03:09 PDT 1999
State-Changed-Why:

Yes, this is working as designed.  What you are doing is
passing the name of a file to the script through the
path-info mechanism.  Nothing requires the path-info
URI component to be a filename, or any other particular
type of information, so Apache treats it as an opaque
string rather than trying to assume it knows what it
is and wasting possibly erroneous effort on it.  If the
path-info were arbitrary data, such as "MontyPython",
Apache would spend cycles and disk I/O trying to treat
it as a filename.  And what if the arbitrary data just
*happened* to match the name of a file outside the
server's mapping space?  What if MontyPython actually
*was* the name of a file, but wasn't intended that
way in the URI?  So Apache doesn't make assumptions
like this.  Sorry..
Class-Changed-From-To: sw-bug-support
Class-Changed-By: coar
Class-Changed-When: Wed May 26 08:03:09 PDT 1999
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]
[If you do not include this Cc, your reply may be ig-   ]
[nored unless you are responding to an explicit request ]
[from a developer.                                      ]
[Reply only with text; DO NOT SEND ATTACHMENTS!         ]



