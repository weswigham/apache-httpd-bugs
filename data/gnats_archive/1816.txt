Received: (qmail 21579 invoked by uid 2012); 16 Feb 1998 18:16:12 -0000
Message-Id: <19980216181612.21578.qmail@hyperreal.org>
Date: 16 Feb 1998 18:16:12 -0000
From: Enrik Berkhan <enrik@inka.de>
Reply-To: enrik@inka.de
To: apbugs@hyperreal.org
Subject: RLimitMEM doesn't work on Linux
X-Send-Pr-Version: 3.2

>Number:         1816
>Category:       os-linux
>Synopsis:       RLimitMEM doesn't work on Linux
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Mon Feb 16 10:20:00 PST 1998
>Last-Modified:  Wed Feb 18 12:54:04 PST 1998
>Originator:     enrik@inka.de
>Organization:
>Release:        1.2.5
>Environment:
Linux quechua 2.0.32 #3 Thu Dec 11 17:18:12 MET 1997 i586
>Description:
Apache implements RLimitMEM by setting "RLIMIT_DATA" and "RLIMIT_VMEM"
if #defined. On Linux, only RLIMIT_DATA is #defined, but seems not to
work. But there's an equivalent to RLIMIT_VMEM called RLIMIT_AS. Using
RLIMIT_AS instead of RLIMIT_VMEM solves the problem.
>How-To-Repeat:

>Fix:
--- conf.h.orig Mon Feb 16 19:03:12 1998
+++ conf.h      Mon Feb 16 18:42:56 1998
@@ -261,6 +261,7 @@
 #define HAVE_SHMGET
 #define HAVE_SYS_RESOURCE_H
 typedef int rlim_t;
+#define RLIMIT_VMEM RLIMIT_AS
 #endif
 #define USE_FCNTL_SERIALIZED_ACCEPT
 #undef HAVE_GMTOFF
%0
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: dgaudet
State-Changed-When: Wed Feb 18 12:54:03 PST 1998
State-Changed-Why:
Patch applied to 1.3b6-dev.  Thanks.

For interest sake, RLIMIT_DATA applies to memory allocated via brk()
only.  RLIMIT_AS applies to all memory, including mmap()d memory... and
newer linux libcs use mmap() for allocation.  I consider the RLIMIT_DATA
behaviour to be a bug... but Linus hasn't ever accepted a patch to
fix it.

Dean
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]



