Received: (qmail 20093 invoked by uid 2012); 24 Aug 1998 04:47:06 -0000
Message-Id: <19980824044706.20092.qmail@hyperreal.org>
Date: 24 Aug 1998 04:47:06 -0000
From: Gerd Knops <gerti@BITart.com>
Reply-To: gerti@BITart.com
To: apbugs@hyperreal.org
Subject: cgi triggers premature EOF to be sent to client
X-Send-Pr-Version: 3.2

>Number:         2894
>Category:       mod_cgi
>Synopsis:       cgi triggers premature EOF to be sent to client
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    apache
>State:          open
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Sun Aug 23 21:50:00 PDT 1998
>Last-Modified:  Mon Sep  7 19:20:00 PDT 1998
>Originator:     gerti@BITart.com
>Organization:
apache
>Release:        1.3.1
>Environment:
NEXTSTEP 3.3
>Description:
Hi Guys,

Sorry, this is going to be vague, but maybe it rings a bell somewhere.

A cgi script working perfectly fine with 1.2.x suddenly started failing. The script sends a number of fixed size files from a floppy to a java applet.

The Java applet receives a premature EOF, which in turn causes apache to send a SIGTERM to the CGI.

Here is the code in the CGI that sends the files:

	foreach my $file (@files)
	{
		my $mtime=(stat("$floppy/$file"))[9];
		print "$file\t$mtime\r\n";
		open(IN,"$floppy/$file");
		my $buf="";
		unless(sysread(IN,$buf,4608)==4608)
		{
			die("$0: Error reading 4608 bytes from $floppy/$file");
		}
		close(IN) || die("$0: Close failed for $floppy/$file");
		print $buf;
	}

The CGI doesn't produce any error messages. To make things more bizar, calling the CGI a number of times makes it fail later and later in the process, until it finally works. Remount the floppy, and the problems start over.

I thought it might have to do with me sending binary data, so I replaced the "print $buf;" with "print '-' x 4608;", but the behavior was the same.

I guess it has to do woth apache now sending the output from the CGI unbuffered, but I am at a total loss to even figure out what or where it goes wrong.

The only thing changed since the script used to work was apache.

Setting $! to 0 or 1 in perl doesn't make any difference.

I'd be very thankful for any pointers.

Gerd
>How-To-Repeat:

>Fix:

>Audit-Trail:

From: Marc Slemko <marcs@znep.com>
To: Gerd Knops <gerti@BITart.com>
Cc: apbugs@hyperreal.org
Subject: Re: mod_cgi/2894: cgi triggers premature EOF to be sent to client
Date: Mon, 24 Aug 1998 00:13:44 -0700 (PDT)

 On 24 Aug 1998, Gerd Knops wrote:
 
 > Sorry, this is going to be vague, but maybe it rings a bell somewhere.
 > 
 > A cgi script working perfectly fine with 1.2.x suddenly started
 > failing. The script sends a number of fixed size files from a floppy
 > to a java applet.
 
 Have you tried not sending it from a floppy?  
 
 > 
 > The Java applet receives a premature EOF, which in turn causes apache
 > to send a SIGTERM to the CGI.
 
 Exactly what happens in the applet?  What does it do?  Where is it
 running?
 
 Are you sure it doesn't have anything to do with PR#2066?
 (http://bugs.apache.org/index/full/2066)
 
 I would suggest you try to reproduce the problem with something other
 than Java on the other end; otherwise, it may well just be the
 client that is messed up.  There are various changes that could
 have caused the change in behaviour.
 

From: Gerd Knops <gerti@bitart.com>
To: Marc Slemko <marcs@znep.com>
Cc: apbugs@hyperreal.org
Subject: Re: mod_cgi/2894: cgi triggers premature EOF to be sent to client
Date: Mon, 24 Aug 98 02:47:07 -0500

 Marc Slemko wrote:
 > On 24 Aug 1998, Gerd Knops wrote:
 >
 > > Sorry, this is going to be vague, but maybe it rings a bell somewhere.
 > >
 > > A cgi script working perfectly fine with 1.2.x suddenly started
 > > failing. The script sends a number of fixed size files from a floppy
 > > to a java applet.
 >
 > Have you tried not sending it from a floppy?
 >
 Yes. The behavior is slightly different. When read from the floppy, every  
 run of the applet reads about 2 files more before receiving the EOF, while  
 when I copy the floppy to the servers HD and run the applet, it gets the EOF  
 after 6-8 files. Once the files are in the disk buffers of the server,  
 everything works. So timing seems to play a role in this.
 
 > >
 > > The Java applet receives a premature EOF, which in turn causes apache
 > > to send a SIGTERM to the CGI.
 >
 > Exactly what happens in the applet?  What does it do?  Where is it
 > running?
 >
 It runs on a Win95 machine in IE3.02 on the same LAN as the server. The java  
 code always fails at a line
 
 	dataStream.readFully(buffer,0,4608);
 	
 where dataStream is a DataInputStream. That line throws a  
 java.io.EOFException. (If working normal it blocks until it was able to read  
 4608 bytes).
 
 > Are you sure it doesn't have anything to do with PR#2066?
 > (<http://bugs.apache.org/index/full/2066)
 >
 I don't think so, the code is Java 1.02 code compiled with MS 1.02  
 compatible compiler, and IE3.02 is 1.02 as well AFAIK.
 
 > I would suggest you try to reproduce the problem with something other
 > than Java on the other end; otherwise, it may well just be the
 > client that is messed up.  There are various changes that could
 > have caused the change in behaviour.
 >
 Cool, I tried telnet on the same machine Apache runs on (NEXTSTEP 3.3, Mach  
 based OS), my input marked with '>':
 
 	gerti@camelot(730) ~: telnet camelot 80
 	Trying 206.103.221.33... Connected to camelot.
 	Escape character is '^]'.
 >	GET /Photos/floppy411.cgi HTTP/1.0
 >	
 	HTTP/1.1 200 OK
 	Date: Mon, 24 Aug 1998 07:40:05 GMT
 	Server: Apache/1.3.1 (Unix) mod_perl/1.15
 	Connection: close
 	Content-Type: text/html
 	
 	mvc-001f.411    903910808
 	
 <a little of the expected data>
 	Connection closed by foreign host.
 	gerti@camelot(730) ~:
 
 The behavior is consistent with what I see from the java applet, so at least  
 we can now exclude the client side.
 
 Knowing that I'll try to write a self contained perl cgi that reproduces the  
 problem. I'll let you know if I get it reproduced.
 
 Thanks for helping out on that bug hunt.
 
 Gerd
 

From: Gerd Knops <gerti@bitart.com>
To: Marc Slemko <marcs@znep.com>
Cc: apbugs@hyperreal.org
Subject: Re: mod_cgi/2894: cgi triggers premature EOF to be sent to client
Date: Mon, 24 Aug 98 03:13:26 -0500

 Hi,
 
 I found a simple cgi that reproduces the problem on my machine:
 
 ---------cut---------
 #!/usr/local/bin/perl -w
 
 print "Content-type: text/html\n\n";
 
 for($i=1;$i<20;$i++)
 {
 	print '-' x 4608;
 	sleep 2;
 }
 
 print "END\r\n";
 ---------cut---------
 
 Without the 'sleep 2;' it works as expected, with the sleep the output is  
 cut short.
 
 Gerd

From: Gerd Knops <gerti@bitart.com>
To: Marc Slemko <marcs@znep.com>, Craig Miskell <cmiskell@csarc.otago.ac.nz>
Cc: apbugs@hyperreal.org
Subject: Re: mod_cgi/2894: cgi triggers premature EOF to be sent to client
Date: Mon,  7 Sep 98 21:10:14 -0500

 Hello,
 
 I received an EMail from another person (Craig Miskell  
 <cmiskell@csarc.otago.ac.nz>) who is able to reproduce the problem on the  
 same platform. I also did some more tests and the problem is not related to  
 the 'sleep', any code that burns a little time can trickle the problem. Even  
 the test script added below triggers the problem on occasion, the error log  
 then reports
 
 	Signal: TERM
 	Signal: PIPE
 	Signal: PIPE
 	Signal: PIPE
 
 Craig suggested that the problem seems to occur at a 4096 byte boundary, and  
 also that only perl scripts seem to trigger it. Could it be some odd  
 combination of Apache/OPENSTEP 4.2/perl (5.004_02 in my case) that causes the  
 problem?
 
 As a side node: I have mod_perl compiled in, and when I run an identical  
 script handled by mod_perl the problem goes away.
 
 If you could provide any pointers as to where to start looking in the code  
 for the cause I'd gladly give it a try.
 
 Thanks
 
 Gerd
 
 ---------------cut---------------
 #!/usr/local/bin/perl -w
 
 foreach (keys %SIG)
 {
 	$SIG{$_}=\&tell;
 }
 
 
 $|=1;
 print "Content-type: text/html\n\n<HTML>\n</HEAD>\n<BODY>\n";
 
 $t="The quick brown fox jumps over the lazy dog<BR>\n";
 
 for($i=0;$i<200;$i++)
 {
 	if($i%10==0)
 	{
 		print "$i-s<BR>\n";
 	}
 	print $t;
 }
 
 print "END<BR>\n</BODY>\n";
 
 
 sub tell
 {
 	print STDERR "Signal: ",shift,"\n";
 }
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]
[If you do not include this Cc, your reply may be ig-   ]
[nored unless you are responding to an explicit request ]
[from a developer.                                      ]
[Reply only with text; DO NOT SEND ATTACHMENTS!         ]



