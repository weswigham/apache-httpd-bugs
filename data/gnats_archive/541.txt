From nobody@hyperreal.com  Sun May  4 06:26:56 1997
Received: (from nobody@localhost)
	by hyperreal.com (8.8.5/8.8.5) id GAA04148;
	Sun, 4 May 1997 06:26:56 -0700 (PDT)
Message-Id: <199705041326.GAA04148@hyperreal.com>
Date: Sun, 4 May 1997 06:26:56 -0700 (PDT)
From: Serguei Kouzmine <sk@www.russia.net>
Reply-To: sk@www.russia.net
To: apbugs@hyperreal.com
Subject: "HTML files <IMG> crate zombies " on FreeBSDLinux
X-Send-Pr-Version: 3.2

>Number:         541
>Category:       mod_cgi
>Synopsis:       "HTML files <IMG> crate zombies " on FreeBSDLinux
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Sun May  4 06:30:00 1997
>Last-Modified:  Tue May 13 12:14:56 PDT 1997
>Originator:     sk@www.russia.net
>Organization:
>Release:        1.1.1, 1.2.something
>Environment:
FreeBSDLinux, version:
[being formally entered from email on behalf of the customer]
>Description:
The html :

#! /usr/bin/perl
print "Content-type: text/html\n\n";
print "<META HTTP-EQUIV=\"Refresh\"  CONTENT=10>\n";
$cnt=0;
$maxcnt=10;
while($cnt!=$maxcnt){
print "<IMG SRC=\"/cgi-bin/somebinary?arglist\">\n";
$cnt++;
}

print "</HTML>\n";


This is just enough to start zombie which will be
the httpd responsible for.

Zombies will be the 'somebinary's

The number of zombie creation might range in 1,2,...
(not exactly one zombie)

the frequency of zombie emergence will greately depend on the
system load average, and in order to watch you may have to
sit waiting for a while.

The problem reported by the hackers is the
incorrect loop structure in the alloc.c
fork()/signal()/wait() handling.
The potential problems arizing seem to be easy to
model by waiting in the perl script which produces the HTML
page, while allocing lots of memory in the child 'somebinary'

Regards,
Serguei Kouzmine
>How-To-Repeat:

>Fix:

>Audit-Trail:
Category-Changed-From-To: config-mod_cgi
Category-Changed-By: coar
Category-Changed-When: Sun May  4 06:41:53 PDT 1997


From: Dean Gaudet <dgaudet@arctic.org>
To: Bill Fergerson <billf@outreach.com>
Subject: re: mod_cgi/541
Date: Sat, 10 May 1997 16:20:34 -0700 (PDT)

 
 Bill, which version of Apache and Linux are you using?  Does it happen
 with 1.2b10? 
 
 Thanks
 Dean
 
 On Wed, 7 May 1997, Rob Hartill wrote:
 
 > 
 > 
 > ---------- Forwarded message ----------
 > Date: Wed, 7 May 1997 09:39:28 -0500 (CDT)
 > From: Bill Fergerson <billf@outreach.com>
 > To: apache-bugs@apache.org
 > Subject: Bug #541
 > 
 > Just wanted to report that we're having very similar problems as the person
 > in bug report #541. Ours seems to be more generalized though - whenever
 > load gets sufficiently high, many zombies are leftover after the CGI is
 > finished executing. 
 > 
 > The server in question has the CGI run roughly 240 times per minute, and 
 > about 10-15 seem to normally turn into zombies. Every minute, on the 
 > minute, the zombies go away though, so they don't cause too much problem
 > other than increasing server load.
 > 
 > I'm fairly convinced this is either an Apache problem, although Linux
 > could still be the culprit. This same CGI is running on AIX box with
 > the Netscape server, and zombies have never shown up with that combination.
 > 
 > Bill Fergerson
 > billf@outreach.com
 > 
 > 
 > 
 
State-Changed-From-To: open-feedback
State-Changed-By: coar
State-Changed-When: Tue May 13 12:04:40 PDT 1997
State-Changed-Why:
Are you still seeing this problem, Serguei?  Can you
tell us more about the 'somebinary' script?  Does the
problem still occur in Apache 1.2b10?
State-Changed-From-To: feedback-closed
State-Changed-By: coar
State-Changed-When: Tue May 13 12:14:55 PDT 1997
State-Changed-Why:
Customer's email address no longer valid, unable to
proceed.
>Unformatted:



