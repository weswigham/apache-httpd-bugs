From nobody@hyperreal.com  Sun Apr 20 09:07:08 1997
Received: (from nobody@localhost)
          by hyperreal.com (8.8.4/8.8.4)
	  id JAA07605; Sun, 20 Apr 1997 09:07:08 -0700 (PDT)
Message-Id: <199704201607.JAA07605@hyperreal.com>
Date: Sun, 20 Apr 1997 09:07:08 -0700 (PDT)
From: Manoj Kasichainula <manojk@io.com>
Reply-To: manojk@io.com
To: apbugs@hyperreal.com
Subject: Logrotate utility causing possible SIGSEGVs when using mod_proxy & caching
X-Send-Pr-Version: 3.2

>Number:         429
>Category:       mod_proxy
>Synopsis:       Logrotate utility causing possible SIGSEGVs when using mod_proxy & caching
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Sun Apr 20 09:10:01 1997
>Last-Modified:  Sun Apr 20 09:56:18 PDT 1997
>Originator:     manojk@io.com
>Organization:
>Release:        1.2b8
>Environment:
Red Hat Linux 4.1
Kernel 2.0.27
libc 5.3.12
gcc 2.7.2.1
>Description:
When Apache is configured to serve as a caching proxy, and the logrotate
utility is used to rotate the Apache's logs, Apache will always crash, sometimes
report a segmentation fault, and sometimes will not restart until caching is
disabled.
>How-To-Repeat:
Get the Red Hat RPM package I built for Apache 1.2b8 (it should be at
ftp://ftp.redhat.com/pub/contrib/SRPMS/apache-1.2b8-1.src.rpm once it is moved
out of the Incoming directory. Or set up the following logrotate configuration
by placing it in the /etc/logrotate.d directory (any file name should do).
Delete /var/lib/logrotate.status (the file that stores info on the last time
logs were rotated) in order to force a log rotate. Make sure caching is enabled.
Then run:

/usr/sbin/logrotate /etc/logrotate.conf

Apache will die, maybe report a SIGSEGV, and maybe won't restart until caching
is disabled.

Here's the config file (taken straight from Red Hat's Apache 1.1.3 package)
/var/log/httpd/access_log {
    postrotate
        /usr/bin/killall -HUP httpd
    endscript
}

/var/log/httpd/agent_log {
    postrotate
        /usr/bin/killall -HUP httpd
    endscript
}

/var/log/httpd/error_log {
    postrotate
        /usr/bin/killall -HUP httpd
    endscript
}

/var/log/httpd/referer_log {
    postrotate
        /usr/bin/killall -HUP httpd
    endscript
}

>Fix:
My guess is that the repeated SIGHUPs in rapid succession are causing hangups
to be received in the code when they aren't handled yet. This code is probably
cache initialization code, and it may be in the middle of an operation on the
cache when it crashes, so the cache is corrupt and Apache gets very confused
>Audit-Trail:

From: Marc Slemko <marcs@znep.com>
To: Manoj Kasichainula <manojk@io.com>
Subject: Re: mod_proxy/429: Logrotate utility causing possible SIGSEGVs when using mod_proxy & caching
Date: Sun, 20 Apr 1997 10:45:51 -0600 (MDT)

 
 On Sun, 20 Apr 1997, Manoj Kasichainula wrote:
 
 [...]
 > /var/log/httpd/referer_log {
 >     postrotate
 >         /usr/bin/killall -HUP httpd
 >     endscript
 > }
 > 
 > >Fix:
 > My guess is that the repeated SIGHUPs in rapid succession are causing hangups
 > to be received in the code when they aren't handled yet. This code is probably
 > cache initialization code, and it may be in the middle of an operation on the
 > cache when it crashes, so the cache is corrupt and Apache gets very confused
 
 Is there any reason why you are doing a killall?  Try changing that to
 something like:
 
 	kill -HUP `cat /usr/local/etc/httpd/logs/httpd.pid`
 
 (change to match the path to your pid file).  There could be some odd
 interaction with killing all the children.
 
 Does it work properly all the time when the proxy is disabled?  How about
 when the proxy is enabled but cache disabled?
 
 Also note that you would _really_ be better off setting up something to
 only HUP it once.  There is a small race condition where a second HUP will
 kill the process but, more importantly, it is possible for a second one to
 get "lost" if it is generated too quickly.
 
State-Changed-From-To: open-closed
State-Changed-By: chuck
State-Changed-When: Sun Apr 20 09:56:18 PDT 1997
State-Changed-Why:
Logrotate utility distributed with Redhat (not Apache) is
liable to cause problems in any Apache configuration by
kill -HUP to all children as well as parent process.
Further explanation sent separately.
Recommend using Apache's rotatelog or chronolog, and sending HUP
HUP signal only to Apache parent process.
>Unformatted:



