From nobody@hyperreal.com  Sat May 31 05:19:00 1997
Received: (from nobody@localhost)
	by hyperreal.com (8.8.5/8.8.5) id FAA16162;
	Sat, 31 May 1997 05:19:00 -0700 (PDT)
Message-Id: <199705311219.FAA16162@hyperreal.com>
Date: Sat, 31 May 1997 05:19:00 -0700 (PDT)
From: Paul Sponagl <pablo@acmedia.de>
Reply-To: pablo@acmedia.de
To: apbugs@hyperreal.com
Subject: SSI: QUERY_STRING
X-Send-Pr-Version: 3.2

>Number:         644
>Category:       mod_include
>Synopsis:       SSI: QUERY_STRING
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Sat May 31 05:20:01 1997
>Last-Modified:  Sat Jun 28 15:35:44 PDT 1997
>Originator:     pablo@acmedia.de
>Organization:
>Release:        1.2b10
>Environment:
linux 2.0.27
>Description:
hello,

Suggest you write a SSI page like:

<form method=get action="/test.shtml">
<input type=text name=test1>
<input type=text name=test2>
<input type=submit name=submit value=submit>
</form>
<!--#include virtual="/cgi-global/printenv?$QUERY_STRING" -->
<!--#include virtual="/cgi-local/give.me.the.input?$QUERY_STRING" -->


and you enter an '&' in one of the textfields e.g.: AT & T you'll get:

QUERY_STRING_UNESCAPED = test1=AT+\&+T\&test2=\&submit=submit
QUERY_STRING = test1=AT+&+T&test2=&submit=submit

you see that splitting at '&' in 'give.me.the.input' leads to faliures.
Is there a chance to get the original Querystring sent from the Browser,
or am i just too stupid ?
( ESCAPED with % )

thank you in advance

paul
>How-To-Repeat:

>Fix:

>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: dgaudet
State-Changed-When: Sun Jun 22 22:03:47 PDT 1997
State-Changed-Why:
QUERY_STRING is the original string following the first ? from
the client.  So this is a client-side issue.  Maybe url-encoded
POSTs would work better for you.

Thanks for using Apache.
Dean
Comment-Added-By: dgaudet
Comment-Added-When: Sat Jun 28 15:35:43 PDT 1997
Comment-Added:
As we discussed this was a problem where QUERY_STRING was being
overwritten while setting QUERY_STRING_UNESCAPED.  The code has
been fixed in 1.2.1-dev and 1.3-dev.

Thanks
Dean
>Unformatted:


