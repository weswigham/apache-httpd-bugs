From ben@staff.juno.com  Mon Apr 21 09:58:52 1997
Received: from zephyr.nyc.deshaw.com (ben@zephyr.nyc.deshaw.com [149.77.12.180])
          by hyperreal.com (8.8.4/8.8.4) with ESMTP
	  id JAA14877 for <apbugs@hyperreal.com>; Mon, 21 Apr 1997 09:58:48 -0700 (PDT)
Message-Id: <199704211658.MAA16032@zephyr.nyc.deshaw.com>
Date: Mon, 21 Apr 1997 12:58:39 -0400
From: Ben Vitale <ben@staff.juno.com>
To: apbugs@hyperreal.com
Cc: erco@d2.com, coar@decus.org, dgaudet@arctic.org
Subject: apache PR # 335

>Number:         437
>Category:       pending
>Synopsis:       apache PR # 335
>Confidential:   yes
>Severity:       serious
>Priority:       medium
>Responsible:    gnats-admin
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Apr 21 10:00:01 1997
>Last-Modified:  Tue Apr 22 02:04:54 PDT 1997
>Originator:     
>Organization:
>Release:        
>Environment:
>Description:
>How-To-Repeat:
>Fix:
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: dgaudet
State-Changed-When: Tue Apr 22 02:04:54 PDT 1997
State-Changed-Why:
I seem to have messed up the bugdb.  Stuff is appearing
in the wrong PRs.  Just cleaning up.
>Unformatted:


erco>    A cgi-bin script (See below) should receive a SIGPIPE after
erco> the user hits STOP the moment it outputs text to the closed
erco> socket.

I've recently run into this problem, too.  I'm not using it for server
push, but I do want to know if my cgi can't push out all the bytes it
wants to send.  I realize the SIGPIPE thing is kind of a hack, but I
think we need some mechanism.  I'm using it to count downloads of
software over a certain period, and I only want to count successful
downloads, and I want to log unsuccessful ones. [Yes, I know there may
be experimental apache modules to do this.  I'd actually be interested
in hearing about them]

I write to relate that I've observed that this happens with apache
1.1.1 and 1.2b7 on Solaris 2.5.1, but with neither apache version on
SunOS 4.1.4.  I've turned off all buffering in my cgi.  seems to me
this may be a sv4r streams thing.  in any case, lots of buffering is
occuring somewhere in the pipe between the cgi and the httpd.  httpd
clearly sees the stop, because it correctly logs the number of bytes
actually written in the access.log.  but the cgi doesn't get the
SIGPIPE.  interestly, the cgi is killed when the client connection is
closed.  But all the output is mopped up, first.

i'm going to try to use an 'nph' script to work around this, and it
looks like it'll fix this problem.  but it's clearly unsatisfactory,
as it creates a bunch of new problems.

BTW, thanks for apache.  It's great software.

Benjamin
ben@staff.juno.com
