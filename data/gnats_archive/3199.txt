Received: (qmail 9299 invoked by uid 2012); 13 Oct 1998 13:33:10 -0000
Message-Id: <19981013133310.9298.qmail@hyperreal.org>
Date: 13 Oct 1998 13:33:10 -0000
From: David Ryan <david@livemedia.com.au>
Reply-To: david@livemedia.com.au
To: apbugs@hyperreal.org
Subject: CGI programs under NT do not have access to system environment variables.
X-Send-Pr-Version: 3.2

>Number:         3199
>Category:       os-windows
>Synopsis:       CGI programs under NT do not have access to system environment variables.
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Tue Oct 13 06:40:00 PDT 1998
>Last-Modified:  Tue Oct 13 07:59:15 PDT 1998
>Originator:     david@livemedia.com.au
>Organization:
>Release:        1.3.3
>Environment:
Windows NT Server 4.0 (Service Pack 3)
Using binaries from Apache website.
Compiling CGI scripts using Visual C++ 5.0
>Description:

I am currently developing a CGI program compiled in C++.
It uses libraries which require access to system environment variables.
The util_script.c does not currently pass on all system environment variables to
the child process.  Can this be modified to give child processes access to
these variables?
>How-To-Repeat:

/* this will check environemt variables. */

int main( int argc, char *argv[], char *env[] )
{
        printf("Content-type: text/html\n\n");

        int i;

        for ( i = 0 ; env[i] != NULL ; ++i )
           printf("%s<BR>\n", env[i] );
        fflush(stdout);
}

You can look at my implementation of this at:

http://www.livemedia.com.au/cgi-bin/env.exe
>Fix:

The OS/2 implementation in util_script.c includes a set of routines to copy
the system environment variables to the child process.  Can this routine
be used within the NT implementation:

/* For OS/2 place the variables in the current
 * environment then it will be inherited. This way
 * the program will also get all of OS/2's other SETs.
*/
for (emxloop = 0; ((emxtemp = env[emxloop]) != NULL); emxloop++) {
    putenv(emxtemp);
}

>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: marc
State-Changed-When: Tue Oct 13 07:59:13 PDT 1998
State-Changed-Why:
Use SetEnv or PassEnv to allow specific variables to be set.
Any random environment variable that is set is not passed through
on purpose unless you tell it to.
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]
[If you do not include this Cc, your reply may be ig-   ]
[nored unless you are responding to an explicit request ]
[from a developer.                                      ]
[Reply only with text; DO NOT SEND ATTACHMENTS!         ]



