Received: (qmail 24855 invoked by uid 2012); 31 Oct 1998 16:37:41 -0000
Message-Id: <19981031163741.24854.qmail@hyperreal.org>
Date: 31 Oct 1998 16:37:41 -0000
From: Robert Dickow <dickow@uidaho.edu>
Reply-To: dickow@uidaho.edu
To: apbugs@hyperreal.org
Subject: server corrupting cgi output for octet-streams
X-Send-Pr-Version: 3.2

>Number:         3322
>Category:       general
>Synopsis:       server corrupting cgi output for octet-streams
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Quarter:        
>Keywords:       
>Date-Required:
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Sat Oct 31 08:40:01 PST 1998
>Closed-Date:    Fri Sep 29 23:00:17 PDT 2000
>Last-Modified:  Fri Sep 29 23:00:17 PDT 2000
>Originator:     dickow@uidaho.edu
>Release:        2.0
>Organization:
>Environment:
Windows95
>Description:
I want to send binary data to the remote client using a CGI
script. But the server is corrupting the data by changing $0A
to $0D, $0A sequences...the newlines for MSDOS machines. My
script explicitly sends a Content-type: application/octet-stream
header. The server also parses out isolated $0D bytes, or messes
them up too. How do I turn this off? ASIS won't do for me in
this particular instance, I don't think. Is there a content-type
that would work?

>How-To-Repeat:

>Fix:

>Release-Note:
>Audit-Trail:
State-Changed-From-To: open-feedback
State-Changed-By: marc
State-Changed-When: Sat Oct 31 09:42:40 PST 1998
State-Changed-Why:
First, please tell us what Apache version you are using.
"2.0" doesn't exist.  It is very hard to help you when you
do not include valid information in your PR!

Second, what language is your CGI script in?  How is it sending
it?  Give an example.

From: "Robert Dickow" <dickow@uidaho.edu>
To: marc@apache.org
Cc: apbugs@apache.org
Subject: Re: general/3322: server corrupting cgi output for octet-streams
Date: 01 Nov 98 09:24:48 -0800

 >First, please tell us what Apache version you are using.
 >"2.0" doesn't exist.  It is very hard to help you when you
 >do not include valid information in your PR!
 
 Oh. No wonder things aren't going right for me! ;-) It turns
 out it is version 1.3.2
 
 >Second, what language is your CGI script in?  How is it sending
 >it?  Give an example.
 
 Here is my PERL script. Maybe I need to put some other MIME
 header information in there?
 
 --------------------------------------------------------
 #!\perl\bin\perl
 
 # This simple program sends a file over HTTP as a binary file.
 # Script by Bob Dickow
 
 require "cgi-lib.pl";
 
 MAIN:
 {
    &ReadParse;
    $filename = "nwhsforms/" . $in{FILETYPE};
    unless (open(INFILE, $filename)) {
      exit;
    }
    print STDOUT &MyPrintHeader($in{FILETYPE});
 
    $c = getc(INFILE);
    while (eof(INFILE) == 0) {
      print STDOUT $c;
      $c = getc(INFILE);
    }
 }
 
 sub MyPrintHeader {
   return "Content-Type: application/octet-stream; name="\n\n";
 }
 
 -------------------------------------------------
 
 Bob Dickow (dickow@uidaho.edu)
 

From: "Robert Dickow" <dickow@uidaho.edu>
To: marc@apache.org
Cc: apbugs@apache.org
Subject: Re: general/3322: server corrupting cgi output for octet-streams
Date: 01 Nov 98 09:54:14 -0800

 Correction to my PERL listing. I hastily clipped the text
 from my editor while working on it. Here is the latest
 experimental incarnation. It works, but still the file data
 is changed during transmission. I'm trying to trick Apache
 or whatever to send raw data.
 
 >--------------------------------------------------------
 #!\perl\bin\perl
 
 # This simple program sends a file over HTTP as a binary file.
 # Script by Bob Dickow
 
 require "cgi-lib.pl";
 
 MAIN:
 {
    &ReadParse;
    $filename = "nwhsforms/" . $in{FILETYPE};
    unless (open(INFILE, $filename)) {
      exit;
    }
    print STDOUT &MyPrintHeader($in{FILETYPE});
 
    $c = getc(INFILE);
    while (eof(INFILE) == 0) {
      print STDOUT $c;
      $c = getc(INFILE);
    }
 }
 
 sub MyPrintHeader {
   $file = @_;
   $msg = "Content-Transfer-Encoding: binary\n";
   $msg = $msg . "Content-Type: application/octet-stream; name=" . $file . "\n\n";
   return $msg;
 }
 
 >-------------------------------------------------
 
 >Bob Dickow (dickow@uidaho.edu)
 
 
 ***********************************************//*
 *       Bob Dickow  (dickow@uidaho.edu)     \\// *
 * Associate Professor of Horn/Theory/Composition *
 *  Lionel Hampton School of Music/Univ of Idaho  *
 *     URL:   http://www.uidaho.edu/~dickow/      *
 **************************************************
 

From: Marc Slemko <marcs@go2net.com>
To: Robert Dickow <dickow@uidaho.edu>
Cc: apbugs@apache.org
Subject: Re: general/3322: server corrupting cgi output for octet-streams
Date: Sun, 1 Nov 1998 17:22:53 -0800 (PST)

 On 1 Nov 1998, Robert Dickow wrote:
 
 > >First, please tell us what Apache version you are using.
 > >"2.0" doesn't exist.  It is very hard to help you when you
 > >do not include valid information in your PR!
 > 
 > Oh. No wonder things aren't going right for me! ;-) It turns
 > out it is version 1.3.2
 > 
 
 Wouldn't it make sense, if you are having problems that may be due to a
 bug, to try the latest version of the software?  Especially when we tell
 you to before you submit a PR?
 
 Please try 1.3.3.  Following directions is one of those really easy things
 you can do to stop us from wasting our time; I don't know if it is fixed
 in 1.3.3 or not, but debugging the same problem over and over people
 people don't use the current version wastes time that could be used far
 more usefully elsewhere.
 

From: "Robert Dickow" <dickow@uidaho.edu>
To: marcs@go2net.com, apbugs@apache.org
Cc:  Subject: Re: general/3322: server corrupting cgi output for octet-streams
Date: 03 Nov 98 13:22:25 -0800

 >Please try 1.3.3.  Following directions is one of those really easy things
 ><snip>
 
 1.3.3 Windows 95 version still shows similar behavior concerning the
 apparent modification of output from my previously submitted PERL
 script.
 
 My method of sending binary data out through stdout has worked for
 a couple of years on our university's UNIX Apache server. Unless I
 have some settings wrong or something, I am not able to identify
 what causes the filtering of hard carriage return or $0D bytes.
 
 Thanks for your assistance.
 
 Bob Dickow (dickow@uidaho.edu)
 
Comment-Added-By: coar
Comment-Added-When: Wed May 24 13:10:39 PDT 2000
Comment-Added:
[This is a standard response.]
This Apache problem report has not been updated recently.
Please reply to this message if you have any additional
information about this issue, or if you have answers to
any questions that have been posed to you.  If there are
no outstanding questions, please consider this a request
to try to reproduce the problem with the latest software
release, if one has been made since last contact.  If we
don't hear from you, this report will be closed.
If you have information to add, BE SURE to reply to this
message and include the apbugs@Apache.Org address so it
will be attached to the problem report!
Comment-Added-By: wrowe
Comment-Added-When: Fri Sep 29 22:52:17 PDT 2000
Comment-Added:

This is not an Apache server problem.

Perl has STDOUT opened in text mode - you must change it
to 'raw' mode.  See the Perl docs.


State-Changed-From-To: feedback-closed
State-Changed-By: wrowe
State-Changed-When: Fri Sep 29 23:00:17 PDT 2000
State-Changed-Why:

Ment to close this report...

>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]
[If you do not include this Cc, your reply may be ig-   ]
[nored unless you are responding to an explicit request ]
[from a developer.                                      ]
[Reply only with text; DO NOT SEND ATTACHMENTS!         ]



