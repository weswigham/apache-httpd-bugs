Received: (qmail 16606 invoked by uid 2012); 19 Oct 1999 22:32:17 -0000
Message-Id: <19991019223217.16605.qmail@hyperreal.org>
Date: 19 Oct 1999 22:32:17 -0000
From: Thomas Fleischmann <tfleischmann@decisive.com>
Reply-To: tfleischmann@decisive.com
To: apbugs@hyperreal.org
Subject: Out of Memory exception at org.apache.jserv.JServConnection.processRequest
X-Send-Pr-Version: 3.2

>Number:         5172
>Category:       mod_jserv
>Synopsis:       Out of Memory exception at org.apache.jserv.JServConnection.processRequest
>Confidential:   no
>Severity:       critical
>Priority:       medium
>Responsible:    jserv
>State:          closed
>Class:          mistaken
>Submitter-Id:   apache
>Arrival-Date:   Tue Oct 19 15:40:00 PDT 1999
>Last-Modified:  Wed Oct 20 09:40:01 PDT 1999
>Originator:     tfleischmann@decisive.com
>Organization:
>Release:        Apache 1.3.9 JServ 1.0
>Environment:
SunOS 5.6 , Solaris VM (build Solaris_JDK_1.2.1_03, native threads, sunwjit)
>Description:
When testing my servlet with Jmeter, I get this exception:
 java.lang.OutOfMemoryError
        at java.lang.Throwable.fillInStackTrace(Native Method)
        at java.lang.Throwable.fillInStackTrace(Compiled Code)
        at org.apache.jserv.JServConnection.processRequest(Compiled Code)
        at org.apache.jserv.JServConnection.run(Compiled Code)
        at java.lang.Thread.run(Compiled Code) 

I increased the JVM memory ( -Xmx64m option) but it did not change anything.
The system memory (scanned with vmstat) looks fine (45 megs available when the
exception is thrown), so I don't know what's going on...
I also turned off every Jserv logging, but in vain.
>How-To-Repeat:
I can give you the .class of my servlets
>Fix:
no idea!
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: ed
State-Changed-When: Tue Oct 19 16:04:43 PDT 1999
State-Changed-Why:
This is not a bug in JServ: it is most likely a bug in your
servlet.  (Though it's also possible that the JVM leaks,
I don't think that's the case with Solaris/1.2.)  It's also
possible that the servlet uses lots of memory, which would
eventually get freed if you weren't stress testing it.

There are several things which you can do to debug this,
but the first is to examine the size of the JVM process
at the time when the exception occurs.

If it's 64MB, then it doesn't matter how much free memory
you have in the system.  To work around that, you could
increase the amount of available memory beyond 64MB (up
to, say, 128 MB).

To see if your servlet is leaking memory, make repeated
requests and observe the memory footprint.  If you find
that it rises linearly with the number of requests (until
it gets an out of memory error) then you know that's the
problem.

thanks for using JServ --

Ed
Class-Changed-From-To: sw-bug-mistaken
Class-Changed-By: ed
Class-Changed-When: Tue Oct 19 16:04:43 PDT 1999

From: Thomas Fleischmann <tfleischmann@decisive.com>
To: "'ed@apache.org'" <ed@apache.org>
Cc: "'apbugs@Apache.Org'" <apbugs@Apache.Org>
Subject: RE: mod_jserv/5172: Out of Memory exception at org.apache.jserv.J
	ServConnection.processRequest
Date: Tue, 19 Oct 1999 16:13:40 -0700

 My servlet does not seem to have memory leaks. Under a normal load, the
 servlet is working fine during hours and the JVM process is not growing in
 size.
 It's only when I put to a heavy load on the system that this exception is
 thrown.
 
 If it does not come from Jserv, why the exception is always thrown at 
 org.apache.jserv.JServConnection.processRequest ?
 
 Thanks for advising!
 
 -----Original Message-----
 From: ed@apache.org [mailto:ed@apache.org]
 Sent: Tuesday, October 19, 1999 4:05 PM
 To: ed@apache.org; jserv-bugdb@apache.org; tfleischmann@decisive.com
 Subject: Re: mod_jserv/5172: Out of Memory exception at
 org.apache.jserv.JServConnection.processRequest
 
 
 [In order for any reply to be added to the PR database, you need]
 [to include <apbugs@Apache.Org> in the Cc line and make sure the]
 [subject line starts with the report component and number, with ]
 [or without any 'Re:' prefixes (such as "general/1098:" or      ]
 ["Re: general/1098:").  If the subject doesn't match this       ]
 [pattern, your message will be misfiled and ignored.  The       ]
 ["apbugs" address is not added to the Cc line of messages from  ]
 [the database automatically because of the potential for mail   ]
 [loops.  If you do not include this Cc, your reply may be ig-   ]
 [nored unless you are responding to an explicit request from a  ]
 [developer.  Reply only with text; DO NOT SEND ATTACHMENTS!     ]
 
 
 Synopsis: Out of Memory exception at
 org.apache.jserv.JServConnection.processRequest
 
 State-Changed-From-To: open-closed
 State-Changed-By: ed
 State-Changed-When: Tue Oct 19 16:04:43 PDT 1999
 State-Changed-Why:
 This is not a bug in JServ: it is most likely a bug in your
 servlet.  (Though it's also possible that the JVM leaks,
 I don't think that's the case with Solaris/1.2.)  It's also
 possible that the servlet uses lots of memory, which would
 eventually get freed if you weren't stress testing it.
 
 There are several things which you can do to debug this,
 but the first is to examine the size of the JVM process
 at the time when the exception occurs.
 
 If it's 64MB, then it doesn't matter how much free memory
 you have in the system.  To work around that, you could
 increase the amount of available memory beyond 64MB (up
 to, say, 128 MB).
 
 To see if your servlet is leaking memory, make repeated
 requests and observe the memory footprint.  If you find
 that it rises linearly with the number of requests (until
 it gets an out of memory error) then you know that's the
 problem.
 
 thanks for using JServ --
 
 Ed
 Class-Changed-From-To: sw-bug-mistaken
 Class-Changed-By: ed
 Class-Changed-When: Tue Oct 19 16:04:43 PDT 1999

From: Ed Korthof <ed@apache.org>
To: Thomas Fleischmann <tfleischmann@decisive.com>
Cc: "'apbugs@Apache.Org'" <apbugs@Apache.Org>, jserv-bugdb@apache.org
Subject: RE: mod_jserv/5172: Out of Memory exception at org.apache.jserv.J
 ServConnection.processRequest
Date: Tue, 19 Oct 1999 17:26:24 -0700 (PDT)

 The exception occurs because there isn't enough memory for JServ to alloc
 objects which it needs as part of request processing.  Given the
 description below, I'd guess that your servlet has a fairly large memory
 footprint -- so that under high load, when there are too many simultaneous
 instances of it, the servlet takes up as much memory as it can get and
 then fails silently when it tries to process one too many requests.  
 JServ doesn't fail silently, and you get this error.
 
 The things which you can do include increasing the available memory to the
 JVM; throttling requests so that you'll serve at most N simultaneous ones;
 and reducing the memory usage of your servlet. The best place to discuss
 this is on the JServ user's group; someone there may be able to give you
 useful advice.
 
 hth --
 
 Ed
 
 On Tue, 19 Oct 1999, Thomas Fleischmann wrote:
 
 > My servlet does not seem to have memory leaks. Under a normal load, the
 > servlet is working fine during hours and the JVM process is not growing in
 > size.
 > It's only when I put to a heavy load on the system that this exception is
 > thrown.
 > 
 > If it does not come from Jserv, why the exception is always thrown at 
 > org.apache.jserv.JServConnection.processRequest ?
 > 
 > Thanks for advising!
 > 
 > -----Original Message-----
 > From: ed@apache.org [mailto:ed@apache.org]
 > Sent: Tuesday, October 19, 1999 4:05 PM
 > To: ed@apache.org; jserv-bugdb@apache.org; tfleischmann@decisive.com
 > Subject: Re: mod_jserv/5172: Out of Memory exception at
 > org.apache.jserv.JServConnection.processRequest
 > 
 > 
 > [In order for any reply to be added to the PR database, you need]
 > [to include <apbugs@Apache.Org> in the Cc line and make sure the]
 > [subject line starts with the report component and number, with ]
 > [or without any 'Re:' prefixes (such as "general/1098:" or      ]
 > ["Re: general/1098:").  If the subject doesn't match this       ]
 > [pattern, your message will be misfiled and ignored.  The       ]
 > ["apbugs" address is not added to the Cc line of messages from  ]
 > [the database automatically because of the potential for mail   ]
 > [loops.  If you do not include this Cc, your reply may be ig-   ]
 > [nored unless you are responding to an explicit request from a  ]
 > [developer.  Reply only with text; DO NOT SEND ATTACHMENTS!     ]
 > 
 > 
 > Synopsis: Out of Memory exception at
 > org.apache.jserv.JServConnection.processRequest
 > 
 > State-Changed-From-To: open-closed
 > State-Changed-By: ed
 > State-Changed-When: Tue Oct 19 16:04:43 PDT 1999
 > State-Changed-Why:
 > This is not a bug in JServ: it is most likely a bug in your
 > servlet.  (Though it's also possible that the JVM leaks,
 > I don't think that's the case with Solaris/1.2.)  It's also
 > possible that the servlet uses lots of memory, which would
 > eventually get freed if you weren't stress testing it.
 > 
 > There are several things which you can do to debug this,
 > but the first is to examine the size of the JVM process
 > at the time when the exception occurs.
 > 
 > If it's 64MB, then it doesn't matter how much free memory
 > you have in the system.  To work around that, you could
 > increase the amount of available memory beyond 64MB (up
 > to, say, 128 MB).
 > 
 > To see if your servlet is leaking memory, make repeated
 > requests and observe the memory footprint.  If you find
 > that it rises linearly with the number of requests (until
 > it gets an out of memory error) then you know that's the
 > problem.
 > 
 > thanks for using JServ --
 > 
 > Ed
 > Class-Changed-From-To: sw-bug-mistaken
 > Class-Changed-By: ed
 > Class-Changed-When: Tue Oct 19 16:04:43 PDT 1999
 > 
 
 

From: Thomas Fleischmann <tfleischmann@decisive.com>
To: 'Ed Korthof' <ed@apache.org>
Cc: "'apbugs@Apache.Org'" <apbugs@apache.org>, jserv-bugdb@apache.org
Subject: RE: mod_jserv/5172: Out of Memory exception at org.apache.jserv.J
	 ServConnection.processRequest
Date: Tue, 19 Oct 1999 17:29:17 -0700

 I don't know what's happening but it's really strange...
 
 I just tried my servlet on Win95 with servletrunner and it's nevering
 throwing any exception!!
 This servlet is indeed memory-intensive (dynamic image generation with
 Java2D)
 but I would expect it to run on a UNIX server as it's running good on my
 poor 
 development PC (Pentium 200/64Megs)!!!
 
 maybe there's a problem with the JVM...
 
 anyway thanks for your help!
 
 
 -----Original Message-----
 From: Ed Korthof [mailto:ed@apache.org]
 Sent: Tuesday, October 19, 1999 5:26 PM
 To: Thomas Fleischmann
 Cc: 'apbugs@Apache.Org'; jserv-bugdb@apache.org
 Subject: RE: mod_jserv/5172: Out of Memory exception at
 org.apache.jserv.J ServConnection.processRequest
 
 
 The exception occurs because there isn't enough memory for JServ to alloc
 objects which it needs as part of request processing.  Given the
 description below, I'd guess that your servlet has a fairly large memory
 footprint -- so that under high load, when there are too many simultaneous
 instances of it, the servlet takes up as much memory as it can get and
 then fails silently when it tries to process one too many requests.  
 JServ doesn't fail silently, and you get this error.
 
 The things which you can do include increasing the available memory to the
 JVM; throttling requests so that you'll serve at most N simultaneous ones;
 and reducing the memory usage of your servlet. The best place to discuss
 this is on the JServ user's group; someone there may be able to give you
 useful advice.
 
 hth --
 
 Ed
 
 On Tue, 19 Oct 1999, Thomas Fleischmann wrote:
 
 > My servlet does not seem to have memory leaks. Under a normal load, the
 > servlet is working fine during hours and the JVM process is not growing in
 > size.
 > It's only when I put to a heavy load on the system that this exception is
 > thrown.
 > 
 > If it does not come from Jserv, why the exception is always thrown at 
 > org.apache.jserv.JServConnection.processRequest ?
 > 
 > Thanks for advising!
 > 
 > -----Original Message-----
 > From: ed@apache.org [mailto:ed@apache.org]
 > Sent: Tuesday, October 19, 1999 4:05 PM
 > To: ed@apache.org; jserv-bugdb@apache.org; tfleischmann@decisive.com
 > Subject: Re: mod_jserv/5172: Out of Memory exception at
 > org.apache.jserv.JServConnection.processRequest
 > 
 > 
 > [In order for any reply to be added to the PR database, you need]
 > [to include <apbugs@Apache.Org> in the Cc line and make sure the]
 > [subject line starts with the report component and number, with ]
 > [or without any 'Re:' prefixes (such as "general/1098:" or      ]
 > ["Re: general/1098:").  If the subject doesn't match this       ]
 > [pattern, your message will be misfiled and ignored.  The       ]
 > ["apbugs" address is not added to the Cc line of messages from  ]
 > [the database automatically because of the potential for mail   ]
 > [loops.  If you do not include this Cc, your reply may be ig-   ]
 > [nored unless you are responding to an explicit request from a  ]
 > [developer.  Reply only with text; DO NOT SEND ATTACHMENTS!     ]
 > 
 > 
 > Synopsis: Out of Memory exception at
 > org.apache.jserv.JServConnection.processRequest
 > 
 > State-Changed-From-To: open-closed
 > State-Changed-By: ed
 > State-Changed-When: Tue Oct 19 16:04:43 PDT 1999
 > State-Changed-Why:
 > This is not a bug in JServ: it is most likely a bug in your
 > servlet.  (Though it's also possible that the JVM leaks,
 > I don't think that's the case with Solaris/1.2.)  It's also
 > possible that the servlet uses lots of memory, which would
 > eventually get freed if you weren't stress testing it.
 > 
 > There are several things which you can do to debug this,
 > but the first is to examine the size of the JVM process
 > at the time when the exception occurs.
 > 
 > If it's 64MB, then it doesn't matter how much free memory
 > you have in the system.  To work around that, you could
 > increase the amount of available memory beyond 64MB (up
 > to, say, 128 MB).
 > 
 > To see if your servlet is leaking memory, make repeated
 > requests and observe the memory footprint.  If you find
 > that it rises linearly with the number of requests (until
 > it gets an out of memory error) then you know that's the
 > problem.
 > 
 > thanks for using JServ --
 > 
 > Ed
 > Class-Changed-From-To: sw-bug-mistaken
 > Class-Changed-By: ed
 > Class-Changed-When: Tue Oct 19 16:04:43 PDT 1999
 > 
 

From: Ed Korthof <ed@apache.org>
To: Thomas Fleischmann <tfleischmann@decisive.com>
Cc: "'apbugs@Apache.Org'" <apbugs@apache.org>, jserv-bugdb@apache.org
Subject: RE: mod_jserv/5172: Out of Memory exception at org.apache.jserv.J 
 ServConnection.processRequest
Date: Tue, 19 Oct 1999 18:08:14 -0700 (PDT)

 Most likely servletrunner throttles the number of requests to some number
 which is small enough that you never use all the available memory.  That
 is at least consistent with the observed behavior (as described so far).
 
 The traditional organization of unix servers often means that more
 configuration is required; but it also offers more flexibility.
 
 Ed
 

From: Thomas Fleischmann <tfleischmann@decisive.com>
To: 'Ed Korthof' <ed@apache.org>
Cc: "'apbugs@Apache.Org'" <apbugs@apache.org>, jserv-bugdb@apache.org
Subject: RE: mod_jserv/5172: Out of Memory exception at org.apache.jserv.J
	  ServConnection.processRequest
Date: Wed, 20 Oct 1999 09:25:41 -0700

 The thing that I don't understand is that there is still a lot of memory
 available in the UNIX system. And I configured the JVM to use the max.
 available
 memory.
 I traced the memory usage of the servlet by calling
 System.Runtime.getRuntime).freeMemory(), and found that the garbage
 collection
 seems to work fine (memory is growing and shrinking)...in 99% of the cases,
 but sometimes, I don't know why, when the memory is low, the exception is
 thrown
 before freeing the memory! Anf then, just after the exception, the memory is
 freed
 and everything is fine!!
 
 -----Original Message-----
 From: Ed Korthof [mailto:ed@apache.org]
 Sent: Tuesday, October 19, 1999 6:08 PM
 To: Thomas Fleischmann
 Cc: 'apbugs@Apache.Org'; jserv-bugdb@apache.org
 Subject: RE: mod_jserv/5172: Out of Memory exception at
 org.apache.jserv.J ServConnection.processRequest
 
 
 Most likely servletrunner throttles the number of requests to some number
 which is small enough that you never use all the available memory.  That
 is at least consistent with the observed behavior (as described so far).
 
 The traditional organization of unix servers often means that more
 configuration is required; but it also offers more flexibility.
 
 Ed
>Unformatted:
[In order for any reply to be added to the PR database, you need]
[to include <apbugs@Apache.Org> in the Cc line and make sure the]
[subject line starts with the report component and number, with ]
[or without any 'Re:' prefixes (such as "general/1098:" or      ]
["Re: general/1098:").  If the subject doesn't match this       ]
[pattern, your message will be misfiled and ignored.  The       ]
["apbugs" address is not added to the Cc line of messages from  ]
[the database automatically because of the potential for mail   ]
[loops.  If you do not include this Cc, your reply may be ig-   ]
[nored unless you are responding to an explicit request from a  ]
[developer.  Reply only with text; DO NOT SEND ATTACHMENTS!     ]



