Received: (qmail 4997 invoked by uid 2012); 6 Feb 1998 13:36:10 -0000
Message-Id: <19980206133610.4996.qmail@hyperreal.org>
Date: 6 Feb 1998 13:36:10 -0000
From: Roger Hunen <roger.hunen@medtronic.com>
Reply-To: roger.hunen@medtronic.com
To: apbugs@hyperreal.org
Subject: memory leak in push_array (alloc.c)
X-Send-Pr-Version: 3.2

>Number:         1776
>Category:       general
>Synopsis:       memory leak in push_array (alloc.c)
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Fri Feb  6 05:40:00 PST 1998
>Last-Modified:  Fri Feb  6 11:32:22 PST 1998
>Originator:     roger.hunen@medtronic.com
>Organization:
>Release:        1.2.4
>Environment:
Solaris 2.4, gcc 2.7.2.3
>Description:
Doesn't arr->elts need to be returned to the pool after the memcpy before being
overwritten with new_data?

Regards,
-Roger
>How-To-Repeat:

>Fix:
See "Full Description"
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: dgaudet
State-Changed-When: Fri Feb  6 11:32:22 PST 1998
State-Changed-Why:
You'll find there's no pfree() function... there's no way to
return memory to a pool, except for clear_pool() which frees all
memory (and other resources) in a pool.  This allows the allocator
to be fast/light weight.  It's normally not an issue, but modules
that need to do a lot of allocation/freeing should make_sub_pool()
and work in that.  There are examples in the standard modules.

Dean
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]



