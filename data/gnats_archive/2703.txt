Received: (qmail 2328 invoked by uid 2012); 24 Jul 1998 18:04:50 -0000
Message-Id: <19980724180450.2327.qmail@hyperreal.org>
Date: 24 Jul 1998 18:04:50 -0000
From: William Bardwell <wbardwel@platinum.com>
Reply-To: wbardwel@platinum.com
To: apbugs@hyperreal.org
Subject: MODULE_MAGIC_NUMBER checking makes distributing modules in binary form nearly impossible
X-Send-Pr-Version: 3.2

>Number:         2703
>Category:       general
>Synopsis:       MODULE_MAGIC_NUMBER checking makes distributing modules in binary form nearly impossible
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          change-request
>Submitter-Id:   apache
>Arrival-Date:   Fri Jul 24 11:10:03 PDT 1998
>Last-Modified:  Mon Jul 27 09:38:26 PDT 1998
>Originator:     wbardwel@platinum.com
>Organization:
>Release:        1.3.X
>Environment:
All
>Description:
The manner in which Apache barfs if a module doesn't have the exact same
MODULE_MAGIC_NUMBER as the server itself makes distributing modules as binaries
very combersome, since you have to provide a binary for every possible revision
of Apache (or atleast have a struct module for each one).  With the new DSO
stuff the idea of distributing modules as binaries would otherwise be very
attractive.  (Also, this checking means that if you send someone a module as
a binary, they can't upgrade their version of Apache till you send them a new
version of your binary, for the new version of Apache.)
>How-To-Repeat:

>Fix:
One of two things:
1) change the magic number checking so it would only reject a module if it was for
a totally different version of apache (ie all 1.3.X would take a module built for
1.3...)
2) make a special magic number that module writers, who would like to, can use
to tell Apache not to worry about what version they are (and Apache would not
complain if it sees that one.)  (You could still leave STANDARD_MODULE_STUFF
using the current system.)
3) combination of both (ie special magic number values that do #1, but default
is same as now...)
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: akosut
State-Changed-When: Mon Jul 27 09:38:25 PDT 1998
State-Changed-Why:
This is in fact an intended feature of the MODULE_MAGIC_NUMBER
check. Apache 1.x has not been designed with binary compatibility
in mind, and were this check not present, all manner of horrors
would be unleashed if modules compiled agaist different versions
of Apache were linked together.

In fact, nearly every MODULE_MAGIC_NUMBER change
(see http://dev.apache.org/mmn.txt for a partial list) in
1.3 development cycle is a change that breaks binary
compatibility. Regardless of whether the check was bypassed,
modules simply wouldn't work.

It should be pointed out that this is only a problem during
beta cycles, and we do not reccomend distributing binary modules
for beta software. The API of final Apache releases are quite
stable; All 1.2.x versions share the same MODULE_MAGIC_NUMBER,
for example. We expect that modules compiled for 1.3.1 will
be linkable with Apache 1.3.x for many months to come.

However, you do bring up a good point, and it establishing
methods of maintaining binary backwards-compatibility for
modules is a priority for Apache 2.0.

Thanks for using Apache.

>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]



