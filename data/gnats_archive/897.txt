From nobody@hyperreal.org  Tue Jul 22 12:19:56 1997
Received: (from nobody@localhost)
	by hyperreal.org (8.8.5/8.8.5) id MAA03363;
	Tue, 22 Jul 1997 12:19:56 -0700 (PDT)
Message-Id: <199707221919.MAA03363@hyperreal.org>
Date: Tue, 22 Jul 1997 12:19:56 -0700 (PDT)
From: Gerald Anderson <gander@netcomi.com>
Reply-To: gander@netcomi.com
To: apbugs@hyperreal.org
Subject: Possible Starving Sockets issue.  In same conf 1 virtual getting connection regused, others ok. Intermittant
X-Send-Pr-Version: 3.2

>Number:         897
>Category:       config
>Synopsis:       Possible Starving Sockets issue.  In same conf 1 virtual getting connection regused, others ok. Intermittant
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Tue Jul 22 12:20:02 1997
>Last-Modified:  Thu Sep 25 00:30:16 PDT 1997
>Originator:     gander@netcomi.com
>Organization:
>Release:        1.2.1
>Environment:
Linux multi1.netcomi.com 2.0.29 #7 Fri Jun 20 08:22:21 CDT 1997 i686
gcc version 2.7.2.1> httpd -v 
Server version Apache/1.2.1.

>Description:
We run 8 copies of httpd with 8 different config files using listens and virtual
hosts.  Recently (since 1.2.1 upgrade?) It seems as though we are seeing a starving socket
type problem where one virtual will get connection refused, and another is fine. . .same
config.  It seems pretty intermittent, and we haven't found a reliable way
of reproducing the problem.  We do see it fairly often with nearly 14,000 virtual
web sites (on 35 servers).  All the machines are fairly busy, but have been for
months.
>How-To-Repeat:
Unknown
>Fix:
Verify that it is/isn't starving sockets on linux (linux does serial_accept by default).
Obvously no serial_accept compiles fix this issue. 
>Audit-Trail:
State-Changed-From-To: open-analyzed
State-Changed-By: marc
State-Changed-When: Tue Jul 22 12:36:07 PDT 1997
State-Changed-Why:
Is the connection actually refused or just not serviced?
If you telnet to the virtual server, what does it give you?
If the connection is refused, that doesn't sound like a
starved socket problem unless the number of unaccepted
connections is hitting somaxconn; Dean?  What does that
default to in Linux, how can it be changed?

If you could work around your need for a Listen directive
for each server, you would eliminate a _lot_ of overhead.
If the file descriptor limitations are the only reason
you need multipl copies of Apache running, finding a
way to make Linux use more would be a good thing.

Did you ever see this problem before recently?  Have you
changed your Linux kernel recently?

From: Dean Gaudet <dgaudet@arctic.org>
To: Marc Slemko <marc@hyperreal.org>
Subject: Re: config/897: Possible Starving Sockets issue.  In same conf 1 virtual getting connection regused, others ok. Intermittant
Date: Tue, 22 Jul 1997 13:48:09 -0700 (PDT)

 
 On Tue, 22 Jul 1997, Marc Slemko wrote:
 
 > If the connection is refused, that doesn't sound like a
 > starved socket problem unless the number of unaccepted
 > connections is hitting somaxconn; Dean?  What does that
 > default to in Linux, how can it be changed?
 
 somaxconn in default code maxes at 128.  You can increase it by
 applying a patch I wrote (should work against 2.0.29 or 2.0.30):
 
 http://www.arctic.org/~dgaudet/patches/linux-2_0_29-SOMAXCONN.patch
 
 If you're running with SYN or RST cookies then you'll know if it's hitting
 the listen queue length, because it'll start using the cookies and klogd
 should get messages about that.  See /var/log/messages.
 
 > If you could work around your need for a Listen directive
 > for each server, you would eliminate a _lot_ of overhead.
 > If the file descriptor limitations are the only reason
 > you need multipl copies of Apache running, finding a
 > way to make Linux use more would be a good thing.
 
 It's easy to go to 1024, but extra changes are needed to go to higher
 values like 3000 or 4000.  There's a patch at
 
     http://www.linux.org.za/filehandle.patch.linux
 
 which goes to essentially arbitrary amounts (>32768 might be a problem,
 dunno).
 
 My hypothesis, and the reason I was asking if your system was maxed
 out, is that you've run into a theoretical problem that I've fixed in
 the 1.3-dev code base.  Apache 1.2 always scans sockets in the reverse
 order of Listen statements.  So if some of the early ones are really
 busy, they could "lock out" some of the later ones.  In 1.3 all children
 rotate through the sockets and keep state between requests.  It may not
 even require a system to be maxed out for this to be a problem.
 
 If you're brave, you could try 1.3a1 which will be released hopefully
 this week.  I don't think I could backpatch this for 1.2, I've done
 a lot of work in that part of http_main.c.  I'd love to know if 1.3a1
 fixes it ... 'cause it would mean the problem wasn't just theoretical.
 
 As Marc said, it'd be good for you to eliminate the use of Listen
 directives.  Probably by going with the descriptor patch.
 
 Dean
 
Comment-Added-By: dgaudet
Comment-Added-When: Sat Aug 16 18:42:45 PDT 1997
Comment-Added:
User is trying out 1.3a1 to see if the starving problem fix
in 1.3 helps this situation.  The fix I'm referring to is
the rotation through Listens rather than letting earlier Listens
starve out later Listens.

Dean
State-Changed-From-To: analyzed-closed
State-Changed-By: dgaudet
State-Changed-When: Thu Sep 25 00:30:16 PDT 1997
State-Changed-Why:
Assuming the starvation fixes in 1.3 fixed this problem.

Dean
>Unformatted:



