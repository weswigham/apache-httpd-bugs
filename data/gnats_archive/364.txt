From nobody@hyperreal.com  Fri Apr 11 08:11:24 1997
Received: (from nobody@localhost)
          by hyperreal.com (8.8.4/8.8.4)
	  id IAA10194; Fri, 11 Apr 1997 08:11:24 -0700 (PDT)
Message-Id: <199704111511.IAA10194@hyperreal.com>
Date: Fri, 11 Apr 1997 08:11:24 -0700 (PDT)
From: Thomas Erskine <tom@crc.doc.ca>
Reply-To: tom@crc.doc.ca
To: apbugs@hyperreal.com
Subject: SSI doesn't work within HEADER files
X-Send-Pr-Version: 3.2

>Number:         364
>Category:       mod_dir
>Synopsis:       SSI doesn't work within HEADER files
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Fri Apr 11 08:20:01 1997
>Last-Modified:  Sun Apr 13 17:58:18 PDT 1997
>Originator:     tom@crc.doc.ca
>Organization:
>Release:        1.2b8
>Environment:
SunOS silverlock 5.5 Generic_103093-06 sun4m sparc SUNW,SPARCstation-10
gcc version 2.7.2
>Description:
I have an icon directory (/httpd/htdocs/icons/), which has within
it a HEADERS.html file.  I'd like the header to say, among other 
things, the date the directory last changed, and when the icon-
index changed, so people will know if they're out of sync.
Unfortunately, I can't seem to get the server to treat the 
HEADER.html file as server-parsed, except by adding

AddHandler server-parsed .html

to the .htaccess file, which doesn't seem quite right, though 
probably harmless in this specific case.
>How-To-Repeat:
http://clark.dgim.doc.ca/icons/ has the non-functioning 
HEADER.html being included.  You can see, in the source, that
the ssi stuff hasn't been parsed, i.e. it's still there.
>Fix:
I'd suggest that the code which looks for HEADER.html or HEADER
be expanded be one extra special-case which looks for HEADER.shtml
and does the right thing with it.  It'd be nice if it also obeyed
the XBitHack option too
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: dgaudet
State-Changed-When: Sun Apr 13 17:58:17 PDT 1997
State-Changed-Why:
Unfortunately this won't work because Apache does not support
layered i/o (i.e. one module processing the output of
another module, or modules acting as filters) at the moment.
It's something that we intend to be a feature of version 2.0.

Thanks
Dean
>Unformatted:


