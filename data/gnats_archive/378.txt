From nobody@hyperreal.com  Sun Apr 13 13:05:38 1997
Received: (from nobody@localhost)
          by hyperreal.com (8.8.4/8.8.4)
	  id NAA13239; Sun, 13 Apr 1997 13:05:38 -0700 (PDT)
Message-Id: <199704132005.NAA13239@hyperreal.com>
Date: Sun, 13 Apr 1997 13:05:38 -0700 (PDT)
From: Eilebrecht@hyperreal.com, Lars <sfx@unix-ag.org>
Reply-To: sfx@unix-ag.org
To: apbugs@hyperreal.com
Subject: Wrong behavior on an OPTIONS request
X-Send-Pr-Version: 3.2

>Number:         378
>Category:       protocol
>Synopsis:       Wrong behavior on an OPTIONS request
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          analyzed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Sun Apr 13 13:10:02 1997
>Last-Modified:  Mon Feb 23 03:35:17 PST 1998
>Originator:     sfx@unix-ag.org
>Organization:
>Release:        1.2.0
>Environment:
all (tested under Linux2)
>Description:
  I'm wondering if the OPTIONS method of Apache is really
  conforming to RFC2068...
  Example:
    PUT is configured via 'Script PUT /cgi-bin/put.cgi' and
    the servers allows PUT to its documents (<Limit PUT>).
    When I try the request "OPTIONS /cgi-bin/put.cgi" the reponse
    contains "PUT" in the Allow-Header, but I cannot PUT to
    *this* resource.
    When I try a request like "OPTIONS /put_allowed_dir/index.html"
    the response does not contain "PUT" as allowed, although I
    can PUT something to this location.
    When I try OPTIONS on a resource that is protected via some
    means of authentication the response contains an authentication
    challenge, although RFC2068 says that there should be no initiation
>How-To-Repeat:

>Fix:

>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: dgaudet
State-Changed-When: Sun Apr 27 13:51:48 PDT 1997
State-Changed-Why:
Our protocol cop says:

> From: "Roy T. Fielding" <fielding@kiwi.ICS.UCI.EDU>

> The current OPTIONS is HTTP/1.1 compliant, but that doesn't say much
> since HTTP/1.1 does not require that OPTIONS responses be truthful.
> Also. the HTTP/1.1 definition of OPTIONS will be changing soon, so
> there's not much point worrying about it.

But thanks for reporting it.
Dean
State-Changed-From-To: closed-analyzed
State-Changed-By: fielding
State-Changed-When: Tue Jul  1 16:41:14 PDT 1997
State-Changed-Why:

Planning ahead, there are a few aspects of our current support
for the OPTIONS method that need to be fixed.

1.(short term) The default OPTIONS handler fails to check
   for and read the request message body.  It needs to do
   so since future enhancements to OPTIONS will probably use
   the body to pass a query syntax of some sort.  The same
   comment applies for the TRACE handler.

2.(medium term) The URL handler needs to special-case "*"
   and prevent the auth routines from rejecting it with
   a 403 Forbidden message.

3.(long term) The API needs to be able to support the
   checking of OPTIONS without performing or handling the
   action.

.....Roy

Release-Changed-From-To: 1.2b7-1.2.0
Release-Changed-By: fielding
Release-Changed-When: Tue Jul  1 16:41:14 PDT 1997
State-Changed-From-To: analyzed-suspended
State-Changed-By: marc
State-Changed-When: Fri Oct 31 16:27:33 PST 1997
State-Changed-Why:
Something that will be addressed in the future as it becomes
necessary, standards are firmed up, and someone has interest.
State-Changed-From-To: suspended-analyzed
State-Changed-By: dgaudet
State-Changed-When: Mon Feb 23 03:35:16 PST 1998
State-Changed-Why:
I wanna see this on the open problems list.
>Unformatted:


