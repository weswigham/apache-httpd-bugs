Received: (qmail 4834 invoked by uid 2012); 28 Oct 1997 13:14:45 -0000
Message-Id: <19971028131445.4833.qmail@hyperreal.org>
Date: 28 Oct 1997 13:14:45 -0000
From: Rainer Scherg <Rainer.Scherg@rexroth.de>
Reply-To: Rainer.Scherg@rexroth.de
To: apbugs@hyperreal.org
Subject: HTTPS - Cannot Connect! (PR#1024, PR#1105)
X-Send-Pr-Version: 3.2

>Number:         1326
>Category:       mod_proxy
>Synopsis:       HTTPS - Cannot Connect! (PR#1024, PR#1105)
>Confidential:   no
>Severity:       critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Tue Oct 28 05:20:01 PST 1997
>Last-Modified:  Sun Mar 29 20:25:15 PST 1998
>Originator:     Rainer.Scherg@rexroth.de
>Organization:
>Release:        1.3b2
>Environment:
Sparc, Solaris 2.5, gcc
>Description:
Remark: The bug was tracked in PR#1024 and again reported in PR#1105.

Connecting via Netscape to a https-URL shows a dialog-box
  "Document contains no data".

The error log shows the following lines:

>How-To-Repeat:
Problem occurs at any https - request.
e.g. http://R2online.sap-ag.de/login_d.htm

>Fix:

>Audit-Trail:
State-Changed-From-To: open-analyzed
State-Changed-By: marc
State-Changed-When: Tue Oct 28 06:44:24 PST 1997
State-Changed-Why:
The base Apache does not have SSL built in so it can not
talk to a server over a SSL connection.  That means
all connections to port 443 are doomed to failure.

The normal way to handle this is to use the CONNECT
method, which is automatically used for https requests
and which is sent to the normal webserver port.

Does proxy1.mannesmann.de support CONNECT?  If not, it
will never work and is not supposed to.  If it does, have
you tried it with just a "ProxyRemote *" ?

If this doesn't help, recompile Apache with "-g" added to
the EXTRA_CFLAGS for debugging info, add a CoreDumpDirectory
directive to put the core dumps somewhere writable, then
get a core dump and run gbd on it to see where it is dumping.

From: Marc Slemko <marcs@znep.com>
To: Apache bugs database <apbugs@apache.org>
Cc:  Subject: Re: mod_proxy/1326: HTTPS - Cannot Connect! (PR#1024, PR#1105) (fwd)
Date: Wed, 29 Oct 1997 09:07:15 -0700 (MST)

 ---------- Forwarded message ----------
 Date: Wed, 29 Oct 1997 09:49:06 +0100
 From: Rainer Scherg RTC <Rainer.Scherg@rexroth.de>
 To: marc@hyperreal.org
 Cc: rainer.scherg@rexroth.de
 Subject: Re: mod_proxy/1326: HTTPS - Cannot Connect! (PR#1024, PR#1105)
 
 > Synopsis: HTTPS - Cannot Connect! (PR#1024, PR#1105)
 > 
 > State-Changed-From-To: open-analyzed
 > State-Changed-By: marc
 > State-Changed-When: Tue Oct 28 06:44:24 PST 1997
 > State-Changed-Why:
 > The base Apache does not have SSL built in so it can not
 > talk to a server over a SSL connection.  That means
 > all connections to port 443 are doomed to failure.
 > 
 > The normal way to handle this is to use the CONNECT
 > method, which is automatically used for https requests
 > and which is sent to the normal webserver port.
 
 Yes, I've tried this first...
 Playing with "ProxyRemote" and "https" was a result due to the
 connect problem.
 > 
 > Does proxy1.mannesmann.de support CONNECT?  If not, it
 > will never work and is not supposed to.  If it does, have
 > you tried it with just a "ProxyRemote *" ?
 
 Yes, I've tried this... 
 Connecting directly to our firewall (the remote proxy - it's
 a Netscape Enterprise Server) works fine for the https-requests.
 
 > 
 > If this doesn't help, recompile Apache with "-g" added to
 > the EXTRA_CFLAGS for debugging info, add a CoreDumpDirectory
 > directive to put the core dumps somewhere writable, then
 > get a core dump and run gbd on it to see where it is dumping.
 
 I'll try...
 
 cu and tnx for help -- Rainer
 
 
 --------------------------------------------------------------------
 Rainer Scherg, Abt. RTC, Mannesmann Rexroth AG
 e-Mail: Rainer.Scherg@rexroth.de,  Tel/Fax: +49-9352-18-1510 /-1500
 
 

From: Marc Slemko <marcs@znep.com>
To: Apache bugs database <apbugs@apache.org>
Cc:  Subject: Re: mod_proxy/1326: HTTPS - Cannot Connect! (PR#1024, PR#1105) (fwd)
Date: Wed, 29 Oct 1997 09:08:37 -0700 (MST)

 ---------- Forwarded message ----------
 Date: Wed, 29 Oct 1997 10:28:09 +0100
 From: Rainer Scherg RTC <Rainer.Scherg@rexroth.de>
 To: marc@hyperreal.org
 Cc: rainer.scherg@rexroth.de
 Subject: Re: mod_proxy/1326: HTTPS - Cannot Connect! (PR#1024, PR#1105)
 
 > Synopsis: HTTPS - Cannot Connect! (PR#1024, PR#1105)
 > 
 > State-Changed-From-To: open-analyzed
 > State-Changed-By: marc
 > State-Changed-When: Tue Oct 28 06:44:24 PST 1997
 > State-Changed-Why:
 >[...]
 > If this doesn't help, recompile Apache with "-g" added to
 > the EXTRA_CFLAGS for debugging info, add a CoreDumpDirectory
 > directive to put the core dumps somewhere writable, then
 > get a core dump and run gbd on it to see where it is dumping.
 
 Hi!
 
 As an addition to my first reply, this mail contains a trace of the core 
 file.
 
 
 sun-msp-w1a (/tmp)# dbx /usr-
 sys1/rasc/apache/apache_1.3.x/apache_1.3b2/src/http
 d.1.3b2.debug httpd.core
 Reading symbolic information for /usr-
 sys1/rasc/apache/apache_1.3.x/apache_1.3b2
 /src/httpd.1..3b2.debug
 dbx: warning: core object name "httpd.1.3b2.de" matches
 object name "httpd.1.3b2.debug" within the limit of 14. assuming they match
 dbx: warning: writable memory segment 0xdeb30000[53248] of size 0 in core
 dbx: warning: writable memory segment 0xdf630000[4096] of size 0 in core
 core file header read successfully
 Reading symbolic information for rtld /usr/lib/ld.so.1
 Reading symbolic information for /lib/libsocket.so.1
 Reading symbolic information for /lib/libnsl.so.1
 Reading symbolic information for /lib/libpthread.so.1
 Reading symbolic information for /lib/libc.so.1
 Reading symbolic information for /lib/libdl.so.1
 Reading symbolic information for /lib/libintl.so.1
 Reading symbolic information for /lib/libmp.so.1
 Reading symbolic information for /lib/libw.so.1
 Reading symbolic information for /lib/libthread.so.1
 Reading symbolic information for /lib/nss_files.so.1
 Reading symbolic information for /lib/nss_nis.so.1
 detected a multithreaded program
  
 (dbx) where
 =>[1] __sigprocmask(0x0, 0x0, 0x0, 0xffff7fff, 0x93620, 0x0), at 0xdf5b35a4
   [2] __bounceself(0x9363b, 0x0, 0x0, 0x0, 0x935f8, 0x0), at 0xdf5ac29c
   [3] _lrw_unlock(0xdf7f4b18, 0x37d6b0, 0x108, 0xdf7f4b38, 0xdf7f4b20, 
 0xdf7f4b4
 8), at 0xdf5aa5dc
   [4] 0xdf7db1d4(0xdf5c5168, 0xdf5ac108, 0xdf7c089c, 0xdf5adfb4, 0xdf5a3e4b, 
 0xd
 f5a1acc), at 0xdf7db1d3
   [5] 0xdf7d44e4(0xdf5adfb4, 0x0, 0x0, 0x0, 0x0, 0x1), at 0xdf7d44e3
   [6] 0xdf5c4ba8(0x9363b, 0x0, 0x93636, 0x93637, 0x0, 0x93635), at 
 0xdf5c4ba7
   [7] pthread_sigmask(0x2, 0x9367c, 0x0, 0x93637, 0x93640, 0x93635), at 
 0xdf5adf
 b4
   [8] sigprocmask(0x2, 0xdfffebc0, 0x0, 0x3e9, 0xe026d2c0, 0x5), at 
 0xdf5b33d4
   [9] sigrelse(0x6, 0x0, 0x0, 0x0, 0xffffffff, 0x91570), at 0xdf692edc
   [10] abort(0x0, 0x8f400, 0xd, 0x94038, 0xdfffecc8, 0x1), at 0xdf679670
   [11] sig_coredump(0xb, 0xdffff138, 0xdfffef78, 0xffff7fff, 0x93640, 
 0x93670),
 at 0x46f48
   [12] __libthread_segvhdlr(0xb, 0xdffff138, 0xdfffef78, 0xdfffeeb8, 
 0xdf5b2f20,
  0x0), at 0xdf5b3004
   ---- called from signal handler with signal 11 (SIGSEGV) ------
   [13] strlen(), at 0xdf662eac
   [14] sscanf(0x0, 0x70260, 0xdffff2b8, 0xdffff2bc, 0xdffff2c0, 0xdffff274), 
 at
 0xdf6b0e38
   [15] proxy_match_ipaddr(0xa6f24, 0xc30a0, 0x242ac, 0x1, 0x6eba8, 0xc6c30), 
 at
 0x24320
   [16] proxy_handler(0xc30a0, 0x17780, 0x6eaf0, 0x0, 0xdf6bac6c, 0x0), at 
 0x179b
 0
   [17] invoke_handler(0xc30a0, 0x3e8, 0x55a8c8, 0x0, 0x78000, 0xdeb303e0), 
 at 0x
 4f728
   [18] process_request_internal(0xc30a0, 0x1, 0xffffffff, 0x65000000, 
 0x6500, 0x
 deb30460), at 0x54c48
   [19] process_request(0xc30a0, 0x4, 0xc30a0, 0xdffff580, 0xdffff590, 0x5), 
 at 0
 x54cb4
   [20] child_main(0x5, 0x46f64, 0x46c00, 0xdf5cc9a8, 0xdf5c57f0, 0x0), at 
 0x4874
 4
   [21] make_child(0x94038, 0x5, 0x3456ff09, 0x5, 0x3e8, 0x0), at 0x48a90
   [22] perform_idle_server_maintenance(0x0, 0xdffff7ac, 0xe, 0x94038, 
 0x75458, 0
 x6ea70), at 0x48ff0
   [23] standalone_main(0x1, 0xdffff8d4, 0x91570, 0x91400, 0x3, 0x91570), at 
 0x49
 4d4
   [24] main(0x1, 0xdffff8d4, 0xdffff8dc, 0x8f1a8, 0x1, 0x0), at 0x49bb0
 (dbx) quit
 
 
 
 --------------------------------------------------------------------
 Rainer Scherg, Abt. RTC, Mannesmann Rexroth AG
 e-Mail: Rainer.Scherg@rexroth.de,  Tel/Fax: +49-9352-18-1510 /-1500
 
 

From: Marc Slemko <marcs@znep.com>
To: Apache bugs database <apbugs@apache.org>
Cc:  Subject: Re: mod_proxy/1326: HTTPS - Cannot Connect! (PR#1024, PR#1105) (fwd)
Date: Wed, 29 Oct 1997 09:10:16 -0700 (MST)

 ---------- Forwarded message ----------
 Date: Wed, 29 Oct 1997 13:26:27 +0100
 From: Rainer Scherg RTC <Rainer.Scherg@rexroth.de>
 To: marc@hyperreal.org
 Subject: Re: mod_proxy/1326: HTTPS - Cannot Connect! (PR#1024, PR#1105)
 
 > Synopsis: HTTPS - Cannot Connect! (PR#1024, PR#1105)
 > 
 > State-Changed-From-To: open-analyzed
 > State-Changed-By: marc
 > State-Changed-When: Tue Oct 28 06:44:24 PST 1997
 > State-Changed-Why:
 >[...]
 > If this doesn't help, recompile Apache with "-g" added to
 > the EXTRA_CFLAGS for debugging info, add a CoreDumpDirectory
 > directive to put the core dumps somewhere writable, then
 > get a core dump and run gbd on it to see where it is dumping.
 > 
 
 Reply-Mail - Part: 3
 
 I've tried to include a small debug-code in the proxy-source:
 
 The requested https-url is:
  https://R2online.sap-ag.de/scripts/wgate.dll?<some-param>
 
 
 
 Log-Entry concerning this problem:
 --------------------
 *) r->uri: _R2online.sap-ag.de:443_ r->hostname: _[Wed Oct 29
  13:17:25 1997] [notice] httpd: caught SIGSEGV, attempting to
  dump core in /tmp    
 --------------------
 
 
 Module proxy_util.c:
 ---------------------
 static int proxy_match_ipaddr(struct dirconn_entry *This, request_rec *r)
 {
 [...]
     const char *host = proxy_get_host_of_request(r);
 
     memset(&addr, '\0', sizeof addr);
     memset(ip_addr, '\0', sizeof ip_addr);
 
  // add. included print-statement
  fprintf(stderr, "*) r->uri: _%s_ r->hostname: _%s_\n",
          r->uri, r->hostname);
  fflush (stderr);
 [...]
 ---------------------
 
 
 r->hostname seems to be NULL (SIGSEGV)?  (why?)
 and r->uri has a port 443 added (where does this come from?)
 
 ... hope this helps to find the bug -- Rainer
 
 
 
 --------------------------------------------------------------------
 Rainer Scherg, Abt. RTC, Mannesmann Rexroth AG
 e-Mail: Rainer.Scherg@rexroth.de,  Tel/Fax: +49-9352-18-1510 /-1500
 
 

From: Rainer.Scherg@rexroth.de (Rainer Scherg RTC)
To: apbugs@hyperreal.org, marcs@znep.com
Cc: Lars.Eilebrecht@unix-ag.org
Subject: Re: mod_proxy/1326: HTTPS - Cannot Connect! (PR#1024, PR#1105)
Date: Tue, 3 Feb 1998 15:03:54 +0100

 Hi - Bugfix for PR1326 & PR1573 (I hope ...)
 
 -------- diff for apache 1.3b3 -------------
 diff proxy_util.c.org proxy_util.c
 988a989,991
 >     if (host == NULL)   /* oops! */
 >       return 0;
 >
 1137,1138c1140,1144
 <     int h2_len = strlen(host2);
 <     int h1_len = strlen(host);
 ---
 >     int h2_len;
 >     int h1_len;
 >
 >     if (host == NULL || host2 == NULL)
 >        return 0; /* oops! */
 1139a1146,1148
 >     h2_len = strlen(host2);
 >     h1_len = strlen(host);
 >                         
 ------------ end ---------------
 
 Reason for SIGSEGV and core dump:
 
   "hosts" variable in proxy module was not checked for NULL
   in proxy_match_ipaddr and proxy_match_hostname().
 
 These functions were called from "proxy_handler()":
 ----------- begin ---------
 [...]
         int ii;
         struct dirconn_entry *list = (struct dirconn_entry *) conf->dirconn-
 >elts;
 
 /*        if (*++p == '/' && *++p == '/')   */
 
         for (direct_connect = ii = 0; ii < conf->dirconn->nelts && 
 !direct_connect; ii++) {
             direct_connect = list[ii].matcher(&list[ii], r);
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^   ----------
             aplog_error(APLOG_MARK, APLOG_DEBUG, r->server,
                         "URI and NoProxy: %s: %s", r->uri, list[ii].name);
         }
 #[...]
 ------------ end ------------
 
 
 ... hope it helps!
 
 cu -- Rainer
State-Changed-From-To: analyzed-closed
State-Changed-By: brian
State-Changed-When: Sun Mar 29 20:25:15 PST 1998
State-Changed-Why:
Your patch has been independently tested and found to solve
another person's problems (PR #1942) so it has been committed
to the 1.3 CVS tree.  Expect to see it in 1.3b6.  Thanks!
>Unformatted:
>>[Tue Oct 28 13:55:43 1997] [notice] httpd: caught SIGSEGV, attempting to dump co
>>re in /usr/local/etc/httpd
>>[Tue Oct 28 13:55:44 1997] [notice] httpd: caught SIGSEGV, attempting to dump co
re in /usr/local/etc/httpd
>>[Tue Oct 28 13:55:46 1997] [notice] httpd: caught SIGSEGV, attempting to dump co
re in /usr/local/etc/httpd 

[ no core-file has been written... ]


The Proxy-Config looks like:
  ProxyRequests On

  # -- Internet! (Freischaltung via ACL)
  ProxyRemote     *               http://proxy1.mannesmann.de:8080
  ProxyRemote     ftp             http://proxy1.mannesmann.de:8080
  ##ProxyRemote   https           http://proxy1.mannesmann.de:443  
   ^^^^ I've tried several possibilities using the Proxy-Remote https-request...

The Proxy-Server is a virtual server (there are actual 2 proxy-servers -
one for intranet usage an another for restricted internet-access with an ACL)


