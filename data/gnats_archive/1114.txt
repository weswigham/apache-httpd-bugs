From apwww@hyperreal.org  Thu Sep 11 01:27:24 1997
Received: (from apwww@localhost)
	by hyperreal.org (8.8.5/8.8.5) id BAA07200;
	Thu, 11 Sep 1997 01:27:24 -0700 (PDT)
Message-Id: <199709110827.BAA07200@hyperreal.org>
Date: Thu, 11 Sep 1997 01:27:24 -0700 (PDT)
From: Guntram Blohm <gbl@www5.mercedes-benz.com>
Reply-To: gbl@www5.mercedes-benz.com
To: apbugs@hyperreal.org
Subject: Apache does not pass Authorization header to CGI scripts
X-Send-Pr-Version: 3.2

>Number:         1114
>Category:       general
>Synopsis:       Apache does not pass Authorization header to CGI scripts
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          change-request
>Submitter-Id:   apache
>Arrival-Date:   Thu Sep 11 01:30:01 1997
>Last-Modified:  Thu Sep 11 06:40:05 PDT 1997
>Originator:     gbl@www5.mercedes-benz.com
>Organization:
>Release:        1.2.4 and older
>Environment:
independent of OS/Compiler
>Description:
Lines 182/183 of util_script.c say

        else if (!strcasecmp (hdrs[i].key, "Authorization"))
            continue;

which prevents Authorization headers from being passed to CGI scripts,
to avoid password-stealing. I have an environment where 
1) authorization checking is very complex, and i can't use one of the available modules
2) the script needs to know which user is calling it.

In my case, i know that i'm the only one to write scripts for this server,
so i could afford to just comment the above two lines out.
>How-To-Repeat:

>Fix:
Introduce a new option into access.conf - say, Options PassAuth,
which is disabled per default, would enable passing Authorization
headers for a specific directory. This would not change the default behaviour,
but allow system managers to allow auth headers to be passed for certain
directories in which the scripts are considered to be non-malicious.
%0
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: marc
State-Changed-When: Thu Sep 11 06:40:04 PDT 1997
State-Changed-Why:
This is already asked for in PR#549.
http://bugs.apache.org/index/full/549

It is not just an issue of trusting the script, but also
trusting that no one else can see the environment with ps -e.  That
isn't always a smart choice.  There is a mod_auth_external
available somewhere that can run arbitrary programs to
do authentication.

So what it comes down to is that an option may be added
at some point to allow the user to pick if they want it
passed, but there are significant risks to it.
>Unformatted:


