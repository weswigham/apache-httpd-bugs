Received: (qmail 24034 invoked by uid 2012); 11 Oct 1998 15:28:56 -0000
Message-Id: <19981011152856.24033.qmail@hyperreal.org>
Date: 11 Oct 1998 15:28:56 -0000
From: Minoru Nishikubo <minish@pep.ne.jp>
Reply-To: minish@pep.ne.jp
To: apbugs@hyperreal.org
Subject: Configuration file in Japanese
X-Send-Pr-Version: 3.2

>Number:         3181
>Category:       config
>Synopsis:       Configuration file in Japanese
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    apache
>State:          closed
>Quarter:        
>Keywords:       
>Date-Required:
>Class:          doc-bug
>Submitter-Id:   apache
>Arrival-Date:   Sun Oct 11 08:30:01 PDT 1998
>Closed-Date:    Wed Aug 22 17:03:51 PDT 2001
>Last-Modified:  Wed Aug 22 17:03:51 PDT 2001
>Originator:     minish@pep.ne.jp
>Release:        1.3.3
>Organization:
>Environment:
FreeBSD 2.2.6 Release, gcc 2.7.2.1
>Description:
this is "Japanese" Configuration file.($apache/src/Configuration)
it's available in URL
http://club.pep.ne.jp/%7eminish/Config-1.3.3/Configuration.ja_JP.eucJP
>How-To-Repeat:

>Fix:
# Apache httpd 設定ファイル
# (Apache 1.3.2, 1.3.3)
#
# 翻訳 minish@pep.ne.jp
#

# Configuration.tmpl は設定ファイルのテンプレートです。取り込むモジュールや
# Makefile 用の様々なコンパイルフラグを選択するために、Configuration ファイルを
# 編集する必要があります。

# テンプレートファイルは新しいシステムやモジュールが追加されたり、既存のものが
# 変更された場合のみ変更するべきです。こういう場合は、おそらく変更認識するために
# Configure スクリプトを変更する必要があるでしょう。

# このファイルには 5種類の行があります。:

# 空白でない最初の文字が '#' である行はコメントとして分類されます。
#
# CC=gcc などの Makefile のコンパイルオプション
#
# 'Rule' で始まる行は Configure スクリプトがどのような Makefaile を作成するか
# を決めるルールを表す行とされます。
#
# 'AddModule' で始まる行はモジュールを選択する行です。
# これらの設定済みのモジュールは
# もっとも優先度の低いものが先頭にくるように逆順にあげられています。
#
# '%Module' で始まる行は付加的なモジュールを選択する行です。これらのモジュールは
# コンパイル時には取り込まれますが、使用可能な状態にされていません。これらの
# モジュールを使用可能な状態にするために、AddModule ディレクティブを使用します。
# デフォルトの設定ではそのようなモジュールは定義されていません。

################################################################
# Makefile のコンフィグレーション
#
# これらの設定は Configure スクリプトが設定する一般的なコンパイルフラグに
# 追加されます。必要なら Configure スクリプトにこれらの設定をさせるように
# 編集してください。'EXTRA_' で始まる設定は通常の Makefile のコンパイルフラグに
# 追加されます。例えば -Wall というコンパイルフラグでコンパイルしたい場合は、
# EXTRA_CFLAGS に追加してください。これらのフラグは Configure スクリプトが
# 適当だと判断したり、プラットフォームに必要なために設定したフラグに追加されます。
#
# ここではコンパイラ(CC)や最適化(OPTIM)の設定もできます。
# 設定の優先度は次のようになっています。
# 設定されていなければ、Configure スクリプトは C コンパイラとして、
# gcc を探し、次に cc として最適化オプション OPTIM= を設定します。
#
# 最適化についての注意:
# gcc の最適化フラグとして、最適化フラグ(OPTIM)に -O3 や -O6 等の値を
# 設定する場合には気をつけてください。
# これらのフラグを設定して Apache をコンパイルする事は危険である事が
# 経験的に分かっています。Apache がコアダンプしないで普通に実行させたい時は
# 大抵は最適化オプションに -O や -O2 を使用します。
EXTRA_CFLAGS=
EXTRA_LDFLAGS=
EXTRA_LIBS=
EXTRA_INCLUDES=

#CC=
#OPTIM=
#RANLIB=

################################################################
# ダイナミック共有オブジェクト(DSO) サポート
#
# 実行時の柔軟性を最大限に生かすためにダイナミック共有オブジェクト
# ファイルを Apache のコア(本体)やモジュールをコンパイルする時に
# 実験的にサポートしています。
#
# Configure スクリプトは現在限定された方法で DSO ファイルのコンパイル
# 出来るようになっています。なぜならこれは非常にプラットフォームに依存して
# いるからです。
# サポートしているプラットフォームと明らかにサポートしていないプラット
# フォームは "htdocs/manual/dso.html" の中の "Supported Platforms"
# を参照してください。
#
# サポートされていないプラットフォームで DSO 機能を使用したい場合は、
# まず最初に実際使える dlopen() システムコールをサポートしているか確認して、
# プラットフォーム特有のコンパイルおよびリンカフラグを設定する
# 必要があります。
#
# Apache コアモジュールに DSO ファイルを取り込む場所は下の
# SHARED_CORE ルールによって有効になります。
# 一方個々の再コンパイルの必要なしに実行時に読み込まれる
# DSO ファイルとしての Apache のモジュールは `SharedModule'
# コマンドによって読み込まれます。
# このためにはまず mod_so モジュールを有効にしてください。
# (下の相当する `AddModule' コマンドを参照してください。)
# DSO 機能を有効にするそれぞれのモジュールの `AddModule' コマンドを
# `SharedModule' コマンドに置き換えて、ファイル名の拡張子を
# `.o' から `.so' に変えてください。
#
# 時々 DSO ファイルは http プログラムが DSO ファイルを参照した時に
# DSO ファイルから参照する共有ライブラリをリンクする必要があります。
# 例えば mod_auth_db を DSO として取り込む場合は Apache カーネルは
# db ライブラリに対する参照方法を持たないため DSO に対して libdb
# をリンクする必要があります。
# しかし問題はこの "連鎖" は全てのプラットフォームでサポート
# されていない事です。通常は DSO がリンクできるプラットフォーム
# もあれば、リンクが実際に行われていないとエラーになるプラットフォーム
# もあります。
# したがって、ある特定の LoadModule ディレクティブに対して
# "unresolved symbol(解決できないシンボル)" というエラー
# メッセージを見付けたら下の SHARED_CHAIN ルールを試して見てください。

#CFLAGS_SHLIB=
#LD_SHLIB=
#LDFLAGS_SHLIB=
#LDFLAGS_SHLIB_EXPORT=

Rule SHARED_CORE=default
Rule SHARED_CHAIN=default

################################################################
# ルールのコンフィグレーション
#
# これらの設定は特定の機能を要求することを Configure スクリプトに知らせる
# ために使用します。フォーマットは Rule ルール=値 です。
#
# 現時点では次のルールのみが知られています。:
# WANTHSREGEX, SOCKS4, SOCKS5, IRIXNIS, IRIXN32, PARANOID
#
# すべてのルールについて、"yes" と設定すれば、Configure スクリプトはその機能を
# 使用し、取り込むために必要な事を行います。"default" と設定すれば Configure
# スクリプトは "一番いいと思われる" 設定をします。その他の設定をするか、
# 存在しなければ何もしません。
#
# SOCKS4:
#  SOCKS4 を 'yes' に設定する場合は、SOCKS のライブラリのある場所を
#  EXTRA_LIB に設定している事を確認してください。そうでなければ Configure
#  スクリプトは "-L/usr/local/lib -lsocks" を EXTRA_LIB に設定されたものとして、
#  実行されます。
#
# SOCKS5:
#  SOCKS5 を 'yes' に設定する場合は、SOCKS5 のライブラリのある場所を
#  EXTRA_LIB に設定している事を確認してください。そうでなければ Configure
#  スクリプトは "-L/usr/local/lib -lsocks5" を EXTRA_LIB に設定されたものとして、
#  実行されます。
#
# IRIXNIS:
#  Configure スクリプトがシリコングラフィックス社の IRIX システムで
#  実行されていると判断された場合のみ意味をもつルールです。
#  古い IRIX 4.x システムで NIS を使用していて、Apache が mod_userdir
#  等からアクセスする必要がある場合はこのルールを有効にする必要があります。
#  このルールは 5.x 以降のシステムでは必要がありませんし、有効にすべきでは
#  ありません。
#
# IRIXN32
#
#  IRIX システムで実行している場合には Configure スクリプトは
#  n32 ライブラリを検出して、o32 ライブラリの代わりに使用します。
#
# PARANOID
#  1.3 での新しい機能です。Configure スクリプトを実行中の環境と、
#  同じ環境で設定したモジュールが特定のプログラム済の
#  シェルコマンドが実行できます。
#  これはモジュールが Configure スクリプトを実行するかを制御できるように
#  なります。
#  通常は Configure が単にモジュールがこの機能を実行するのを知るだけです。
#  PARANOID を 'yes' に設定すると実際にモジュールが実行するコードを
#  表示します。

Rule SOCKS4=no
Rule SOCKS5=no
Rule IRIXNIS=no
Rule IRIXN32=yes
Rule PARANOID=no

# 以下のルールは Configure スクリプトによって自動的に設定されるべきです。
# しかし、(使用しているプラットフォームによって適切な値が設定できないために)
# Configure スクリプトが設定しないか、正しく設定しない場合はここで設定できます。
# この設定を行わなければならない場合は、どのプラットフォームで、
# 何を設定したのかを Apache の WEB サイト <http://www/bugs.apache.org/> に
# ある問題レポートフォームに記入して、知らせてください。もし使用している
# ブラウザがフォームを送信できない場合は、apache-bugs@apache.org へ電子メールを
# 送って報告することができます。
#
# WANTHSREGEX:
#  Apache は POSIX 正規表現ライブラリのを必要とします。Henry Spencer
#  による優秀な正規表現ライブラリが Apache に含まれているので、
#  必要ならば使用できます。OS にまともな正規表現ライブラリがあれば、
#  WANTHSREGEX ルールに 'no' を設定するか、ルール自体をコメントにして、
#  このライブラリを使用しない選択をすることもできます。デフォルトの動作は
#  OS の細部によりルールを設定されない限り、'no' に設定されます。

Rule WANTHSREGEX=default

################################################################
# モジュールのコンフィグレーション
#
# モジュールは逆順の優先順序で列挙されます。後に現れたモジュールの振舞いが
# 前に現れた振舞いを上書きして優先されます。これは目で確かめられる効果です。
# 例えば、UserDir が Alias の後に現れた場合、特定のユーザのホームディレクトリを
# Alias に設定することができません。
#
# 訳者注
# mod_alias.o が mod_userdir.o の後にあるので、
# 例えば srm.conf に
# UserDir public_html
# Alias /~root/ /usr/local/apache/share/htdocs/
# と指定してある場合は Alias の方が有効になり HTTP サーバは
# root のホームディレクトリの下の public_html を参照せずに
# /usr/local/apache/share/htdocs を参照します。

# 以下の設定はデフォルトの設定として妥当だと思われるものです。
# 特定のモジュールによって与えられる機能が必要な場合は、行頭の '#' 記号を
# 削除してください。しかし、多くのモジュールを取り込んでサーバをコンパイル
# すれば、実行形式ファイルの大きさがそれだけ大きくなり、実行時のメモリも
# 消費します。したがって特定のモジュールの機能を使いそうにない場合は、
# 放っておいて構わないでしょう。

## mod_mmap_static は実験的なモジュールです。おそらくは取り込む
## 必要がないでしょう。いくつかの Web サーバの動作が速くなるかも
## しれません。ドキュメントをしっかり読まずに mod_mmap_static を
## 使用する愚かな人がいるでしょうから、これ以上の情報は与えません。

# AddModule modules/experimental/mod_mmap_static.o

##
## 詳細に設定するためのモジュール
##
## mod_env は CGI/SSI スクリプトで使用できる付加的な、あるいは厳密な環境変数を
## 設定します。すべてのリクエストに対して動作しないので、このモジュールは
## (最も低い優先順位である)一番最初に出てきます。

AddModule modules/standard/mod_env.o

##
## リクエストをログに保存するためのモジュール
##

AddModule modules/standard/mod_log_config.o

## NCSA サーバのユーザエージェント・参照元ログ作成互換機能を行うための付加的な
## モジュールです。しかし、設定可能な access_log を使う事をお勧めします。

# AddModule modules/standard/mod_log_agent.o
# AddModule modules/standard/mod_log_referer.o

##
## タイプチェックモジュール
##
## mode_mime_magic はファイルタイプのデータベースに対してファイル内の
## 数バイトをチェックしてテストします。これは UNIX の file(1) コマンドに
## 基づいたものです。
## mode_mime はファイルの拡張子からコンテントタイプ、エンコーディング、
## "マジック" タイプハンドラを割り当てます。(後者は mod_actions によって
## 廃れてしまっています。以前のものと混同しないようにしてください。
## mod_negotiation は Accept* ハンドラに基づいたコンテンツの選択を可能に
## します。

# AddModule modules/standard/mod_mime_magic.o
AddModule modules/standard/mod_mime.o
AddModule modules/standard/mod_negotiation.o

##
## Content 配送モジュール
##
## ステータスモジュールはサーバが今どのように実行され、何をしているかを詳細に
## 表示します。完全なサーバの状態の情報を得るためにディレクティブ
## 'ExtendedStatus On' にしているか確認してください。
## こうする事が明らかにパフォーマンスのヒットにつながる事を心にとめて
## おいてください。
## 

AddModule modules/standard/mod_status.o

## 情報モジュールはサーバの設定情報や取り込んでいるすべてのモジュールを
## 表示します。デバッグにとても便利なモジュールです。

# AddModule modules/standard/mod_info.o

## mod_include はテキストファイル中にサーバサイドインクルード(SSI)文を解釈
## します。
## mod_autoindex はインデックスファイルを持たないディレクトリへのリクエストを
## 扱います。
## mod_dir はディレクトリへのリクエストと、ディレクトリインデックスを扱います。
## mod_cgi は CGI スクリプトを扱います。

AddModule modules/standard/mod_include.o
AddModule modules/standard/mod_autoindex.o
AddModule modules/standard/mod_dir.o
AddModule modules/standard/mod_cgi.o

## asis モジュールはドキュメントの先頭に HTTP ヘッダを埋め込む事ができる
##  ".asis" ファイルタイプを実現します。
## mod_imap モジュールは内部イメージマップを扱います(もう cgi-bin/imagemap/ は
## 使用しないでください)。
## mod_actions モジュールは特定のファイルに対して、例えばすべての GIF ファイルを
## 自動的に別のファイルタイプにコンバートするというような "ハンドラ" として実行
## したい CGI スクリプトを指定するために使用されます。

AddModule modules/standard/mod_asis.o
AddModule modules/standard/mod_imap.o
AddModule modules/standard/mod_actions.o

##
## URL 変換モジュール
##

## スペルモジュールはユーザが入力した URL のミススペルを訂正しようとします。
## すなわち、大文字にしたり 1つまでのミススペル(文字の挿入、省略、
## 置き換わり、誤植)をチェックします。これで多くのスペルミスのリクエストを
## 捕捉できます。ミススペルと思われれば、"spelling corrected" とリダイレクト
## 先が返されます。

# AddModule modules/standard/mod_speling.o

## UserDir モジュールはユーザ名や /~<user>, /usr/web/<user> などの
## 共通プレフィクスによるリソースディレクトリを選択するためのものです。

AddModule modules/standard/mod_userdir.o

## プロクシモジュールでサーバに外側の http や ftp サービスの代理サーバ
## として実行させられるようになります。まだ、このモジュール自体が
## 完全なものではありません。
## 注意: 代理サーバとして実行させたくない限りは取り込まないでください。
##       通常の(本来のサーバとしての)実行には必要ではありません。

# AddModule modules/proxy/libproxy.a

## Alias モジュールは単純な URL 変換とリダイレクト機能をもたらします。

AddModule modules/standard/mod_alias.o

## mod_rewrite モジュールは正規表現を用いた強力な URI-URI あるいは
## URI-ファイル名対応を可能にしています。

# AddModule modules/standard/mod_rewrite.o

##
## アクセス制御と認証モジュール
##
AddModule modules/standard/mod_access.o
AddModule modules/standard/mod_auth.o

## anon_auth モジュールは匿名 ftp スタイルのユーザ名/パスワード
## 認証を可能にします。

# AddModule modules/standard/mod_auth_anon.o

## db_auth と dbm_auth は Berkeley DB ファイルを用いて動作します。
## - システムが DBM ファイルをサポートしている事を確認してください。
## サポートしていない場合は GNU の "gdbm" パッケージを手に入れて
## EXTRA_LIBS にライブラリを追加してください。
## (将来 Configure スクリプトで自動設定できるようになるかもしれません。)

# AddModule modules/standard/mod_auth_dbm.o
# AddModule modules/standard/mod_auth_db.o

## ダイジェストモジュールは他のモジュールで使用される安全性の低い基本認証の
## かわりに HTTP ダイジェスト認証が使用できます。

# AddModule modules/standard/mod_digest.o

## 応答ヘッダを詳細に設定するためのモジュール
##
## cerrn_meta モジュールはメタファイルについて CERN WEB サーバのような
## 振舞いをさせることができます。

# AddModule modules/standard/mod_cern_meta.o


## エクスパイアモジュールは更新時間やアクセス時間の機能としての
## リソースへのヘッダの期限を使用できるようにします。

# AddModule modules/standard/mod_expires.o

## ヘッダモジュールはサーバ、仮想ホスト、access.conf や .httaccess
## で設定された任意の HTTP 応答ヘッダをセットできるようにします。

# AddModule modules/standard/mod_headers.o

## その他いろいろなモジュール
##
## mod_usertrack モジュールは mod_cookies の新しい名前です。
## このモジュールは代理サーバを使用しないで接続している Netscape や
## Netscape 互換のクライアントのクッキーを使用してマウスクリックの
## 軌跡をログに保存します。
## 
## このモジュールやサイトでクッキーを使用できるモジュールは
## 必要ではありません。このモジュールは単にユーザの行動を捕捉
## するためだけのものです。
##

# AddModule modules/standard/mod_usertrack.o

## example モジュールは Apache API の使用のデモです。詳しくは
## modules/example/README
## を見てください。このモジュールはテスト用にのみ使用すべきで公開サーバで
## 有効化しないでください。

# AddModule modules/example/mod_example.o

## mod_unique_id モジュールはそれぞれのヒットに対して区別できる識別子を
## 生成します。これは環境変数 UNIQUE_ID で参照できます。全てのシステムで
## 動作しないかも知れないので、デフォルトでは取り込みません。

# AddModule modules/standard/mod_unique_id.o

## mod_so モジュールは Apache の再コンパイルを必要とせずにモジュールを
## 追加できるようにします。
## これは現時点で試験的な機能で、我々がサポートするプラットフォームの
## 一部しかサポートしません。
## このエントリは 'SharedModule' に変更しないでください。

# AddModule modules/standard/mod_so.o

## mod_setenvif モジュールはリクエスト中の HTTP ヘッダフィールドに基づいた
## 環境変数を設定できるようにします。例えば、条件によって変わり得る HTML を
## 利用する場合に有効でしょう。バグの多いブラウザを検出するためにも使われる
## ため、一番最後の(もっとも優先度の高い)モジュールになっています。

AddModule modules/standard/mod_setenvif.o

 
>Release-Note:
>Audit-Trail:
State-Changed-From-To: open-suspended
State-Changed-By: coar
State-Changed-When: Thu Apr 29 12:04:58 PDT 1999
State-Changed-Why:

We're not sure what to do with this, although it is very
welcome.  I'm suspending this until we figure out how to
deal with translation submissions like this.

Category-Changed-From-To: general-config
Category-Changed-By: coar
Category-Changed-When: Thu Apr 29 12:04:58 PDT 1999

State-Changed-From-To: suspended-closed
State-Changed-By: slive
State-Changed-When: Wed Aug 22 17:03:51 PDT 2001
State-Changed-Why:

We are still not equiped to handle this.
If you are interested in helping us incorporate this
kind of thing, please join the documentation project:
http://httpd.apache.org/docs-project/

Thanks.
>Unformatted:
[In order for any reply to be added to the PR database, ]
[you need to include <apbugs@Apache.Org> in the Cc line ]
[and leave the subject line UNCHANGED.  This is not done]
[automatically because of the potential for mail loops. ]
[If you do not include this Cc, your reply may be ig-   ]
[nored unless you are responding to an explicit request ]
[from a developer.                                      ]
[Reply only with text; DO NOT SEND ATTACHMENTS!         ]



