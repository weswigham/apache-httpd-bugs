Received: (qmail 7948 invoked by uid 2012); 14 Oct 1997 21:00:09 -0000
Message-Id: <19971014210009.7947.qmail@hyperreal.org>
Date: 14 Oct 1997 21:00:09 -0000
From: Kevin P.Neal <kpneal@pobox.com>
Reply-To: kpneal@pobox.com
To: apbugs@hyperreal.org
Subject: Apache doesn't have a way to dump the body of a POST before sending a response.
X-Send-Pr-Version: 3.2

>Number:         1225
>Category:       protocol
>Synopsis:       Apache doesn't have a way to dump the body of a POST before sending a response.
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Tue Oct 14 14:10:00 PDT 1997
>Last-Modified:  Sat Feb 14 16:19:49 PST 1998
>Originator:     kpneal@pobox.com
>Organization:
>Release:        1.2.4
>Environment:
HP-UX 9.05, HP paid-for ANSI compiler.
Windows NT 4 + various Windows95 boxes.
>Description:
MSIE 3.x and 4.x: MSIE can't handle getting an error response back from the 
server before it has finished transmitting the body of a POST (possibly PUT?)
to the server.

The exact error I'm sending back is '401 -- Authorization Required'. MSIE is
bad at not sending authorization data when it should.

It locks and never finishes the transaction. Hitting 'stop' works to stop the
browser, but the POST is never finished correctly.
>How-To-Repeat:
Sorry, I don't have a URL. Construct a big HONKIN' form with a many fields. You
need enough data to be sent to fill up several packets. 

Submit the form to a URL that requires authorization.

*brrrrnt*. Watch it hang.
>Fix:
Kludge Apache to have another environmental variable (like force-response-1.0 or
the like) to tell it to soak up the body (and discard) if a browser does a POST
but is unable to handle the response early.

Perhaps 'soak-body-before-responding' would be a good name for the env. var
>Audit-Trail:
State-Changed-From-To: open-analyzed
State-Changed-By: marc
State-Changed-When: Tue Oct 14 14:16:53 PDT 1997
State-Changed-Why:
It already does continue reading data from the connection
after sending the error.  It doesn't make any sense that
it should discard any data received before it finishes
sending; even if it doesn't read it, it would have to
explicitly discard it.

Are you sure you didn't compile with -DNO_LINGCLOSE or
something like that?

I don't have MSIE around right now to look, but hopefully
someone can look at it...

There may be something else going on here.
State-Changed-From-To: analyzed-closed
State-Changed-By: dgaudet
State-Changed-When: Sat Feb 14 16:19:49 PST 1998
State-Changed-Why:
This should be fixed in 1.2.6 and 1.3b4 (which will both be
available shortly).

Dean
>Unformatted:

