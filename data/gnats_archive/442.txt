From ben@staff.juno.com  Mon Apr 21 14:33:02 1997
Received: from zephyr.nyc.deshaw.com (root@zephyr.nyc.deshaw.com [149.77.12.180])
          by hyperreal.com (8.8.4/8.8.4) with ESMTP
	  id OAA02899 for <apbugs@hyperreal.com>; Mon, 21 Apr 1997 14:32:59 -0700 (PDT)
Message-Id: <199704212132.RAA16423@zephyr.nyc.deshaw.com>
Date: Mon, 21 Apr 1997 17:32:48 -0400
From: Ben Vitale <ben@staff.juno.com>
To: Dean Gaudet <dgaudet@arctic.org>
Cc: apbugs@hyperreal.com, erco@d2.com, coar@decus.org
In-Reply-To: Your message of "Mon, 21 Apr 1997 14:03:07 PDT."
             <Pine.LNX.3.95dg3.970421135954.27707B-100000@twinlark.arctic.org> 
Subject: Re: apache PR # 335 

>Number:         442
>Category:       pending
>Synopsis:       Re: apache PR # 335
>Confidential:   yes
>Severity:       serious
>Priority:       medium
>Responsible:    gnats-admin
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Apr 21 14:40:01 1997
>Last-Modified:  Tue Apr 22 02:05:39 PDT 1997
>Originator:     
>Organization:
>Release:        
>Environment:
>Description:
>How-To-Repeat:
>Fix:
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: dgaudet
State-Changed-When: Tue Apr 22 02:05:39 PDT 1997
State-Changed-Why:
I seem to have messed up the bugdb.  Stuff is appearing
in the wrong PRs.  Just cleaning up.
>Unformatted:


Dean,

I'm sure this is a lot of work, but how bout this:

put the fd for the tcp connection to the browser client in the READ
FDSET in the httpd select.  if the browser user presses STOP, the
browser client is going to do a CLOSE.  the select should indicate
readability on the socket.  do a read.  it'll return 0.  now you know
to clean-up immediately, including sig pipe to cgi, subsequently doing
the kill/reap dance from the scoreboard (it's vicious! :-) have to be
careful about deadlock when writing such code, i'd imagine.

as for nph, it looked to me in the code (which is very nice, but a
little too complex for me to understand in the whole, which, along
with a lot of time, is what it would take for me to hack in the above
described ideas) as if the server passed the nph cgi a dup'ed fd which
went directly to the client, rather than through the httpd.  is this
inaccurate?  it does seem to be working - i'm getting the sigpipe.

Glad to hear you're working on this.  I understand it won't make it in
soon.  If you're looking for a beta-tester for this particular code...

Thanks again
Benjamin

In message <Pine.LNX.3.95dg3.970421135954.27707B-100000@twinlark.arctic.org>, D
ean Gaudet writes:

    Apache sees the client go away, but it may not see it at a time that's
    convenient.  In particular, if it's blocked on the CGI waiting for it to
    produce something it won't see the client go away until it has results
    from the CGI.  Unfortunately this is exactly the case for long running
    expensive CGIs that you *do* want to stop. 
    
    nph won't really fix it either unfortunately because you're still not
    reading the client's socket, you're reading a pipe from apache. 
    
    The fix for this is non-trivial and won't make 1.2.  But I do plan to
    submit a patch for it as soon as I get the chance to put it together. 
    
    Thanks
    Dean
    
    On Mon, 21 Apr 1997, Ben Vitale wrote:
    
    > 
    > erco>    A cgi-bin script (See below) should receive a SIGPIPE after
    > erco> the user hits STOP the moment it outputs text to the closed
    > erco> socket.
    > 
    > I've recently run into this problem, too.  I'm not using it for server
    > push, but I do want to know if my cgi can't push out all the bytes it
    > wants to send.  I realize the SIGPIPE thing is kind of a hack, but I
    > think we need some mechanism.  I'm using it to count downloads of
    > software over a certain period, and I only want to count successful
    > downloads, and I want to log unsuccessful ones. [Yes, I know there may
    > be experimental apache modules to do this.  I'd actually be interested
    > in hearing about them]
    > 
    > I write to relate that I've observed that this happens with apache
    > 1.1.1 and 1.2b7 on Solaris 2.5.1, but with neither apache version on
    > SunOS 4.1.4.  I've turned off all buffering in my cgi.  seems to me
    > this may be a sv4r streams thing.  in any case, lots of buffering is
    > occuring somewhere in the pipe between the cgi and the httpd.  httpd
    > clearly sees the stop, because it correctly logs the number of bytes
    > actually written in the access.log.  but the cgi doesn't get the
    > SIGPIPE.  interestly, the cgi is killed when the client connection is
    > closed.  But all the output is mopped up, first.
    > 
    > i'm going to try to use an 'nph' script to work around this, and it
    > looks like it'll fix this problem.  but it's clearly unsatisfactory,
    > as it creates a bunch of new problems.
    > 
    > BTW, thanks for apache.  It's great software.
    > 
    > Benjamin
    > ben@staff.juno.com
    > 
