From nobody@hyperreal.com  Mon Sep 30 20:57:17 1996
Received: by taz.hyperreal.com (8.7.5/V2.0) id UAA04255; Mon, 30 Sep 1996 20:57:17 -0700 (PDT)
Message-Id: <199610010357.UAA04255@taz.hyperreal.com>
Date: Mon, 30 Sep 1996 20:57:17 -0700 (PDT)
From: Rob Thau <rst@ai.mit.edu>
Reply-To: rst@ai.mit.edu
To: apbugs@hyperreal.com
Subject: memmove() is required by HSregex, but it isn't in the libraries on SunOS
X-Send-Pr-Version: 3.2

>Number:         8
>Category:       general
>Synopsis:       memmove() is required by HSregex, but it isn't in the libraries on SunOS
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    apache
>State:          closed
>Class:          sw-bug
>Submitter-Id:   apache
>Arrival-Date:   Mon Sep 30 21:00:03 1996
>Last-Modified:  Mon Dec  2 22:28:21 PST 1996
>Originator:     rst@ai.mit.edu
>Organization:
>Release:        1.2-dev
>Environment:
SunOS 4.x
>Description:
memmove() is required by HSregex, but it isn't in the libraries on SunOS,
maybe other platforms too.  We should provide our own.
>How-To-Repeat:

>Fix:
#ifdef NEED_MEMMOVE
void *memmove (void *dv, const void *sv, size_t len)
{
    char *d = (char *)dv, *s = (char *)sv;
    
    /* Assumes flat address space in which comparisons work as expected */
    
    if (s >= d + len || s + len <= d)
        memcpy (d, s, len);     /* No overlap; do whatever's fastest */
    else if (d < s)
        while (len--)
            *d++ = *s++;
    else 
        for (d += len, s += len; len > 0; --len)
            *--d = *--s;

    return dv;
}
#endif%0
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: brian
State-Changed-When: Mon Dec  2 22:28:21 PST 1996
State-Changed-Why:
Sunos now has a USEBCOPY #define - see regex/utils.h.
This fix will be in 1.2b2.
>Unformatted:


